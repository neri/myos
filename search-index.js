var searchIndex = JSON.parse('{\
"bootprot":{"doc":"MEG-OS Boot Procotol","t":[13,13,13,13,3,3,3,4,4,18,18,13,13,13,18,13,13,13,13,13,13,13,4,13,13,13,13,13,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,11,11,11,12,12,11,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["AcpiNonVolatile","AcpiReclaim","Argb32","Available","BootFlags","BootInfo","BootMemoryMapDescriptor","BootMemoryType","ColorMode","DEBUG_MODE","FORCE_SINGLE","FirmwareCode","FirmwareData","FmTowns","HEADLESS","Indexed8","Mmio","MmioPortSpace","Nec98","OsLoaderCode","OsLoaderData","PcCompatible","Platform","Reserved","UEFI","Unavailable","Unknown","Unspecified","acpi_rsdptr","all","base","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmdline","cmp","cmp","cmp","color_mode","contains","default","default","default","default","empty","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","initrd_base","initrd_size","insert","intersects","into","into","into","into","into","into","is_all","is_empty","kernel_base","master_cr3","mem_type","mmap_base","mmap_len","ne","not","page_count","partial_cmp","partial_cmp","partial_cmp","platform","real_bitmap","remove","screen_height","screen_width","set","smbios","sub","sub_assign","toggle","total_memory_size","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vram_base","vram_stride"],"q":["bootprot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","32bit ARGB Color Mode","","","","","","","","","","","Fujitsu FM TOWNS","","8bit Indexed Color Mode","","","NEC PC-98 Series Computer","","","IBM PC Compatible","","","UEFI","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","","","","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","Returns the complement of this set of flags.","","","","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,2,1,0,0,0,0,0,3,3,1,1,4,3,2,1,1,4,1,1,4,0,1,4,1,4,2,5,3,6,3,3,3,3,3,3,3,5,4,2,3,6,1,5,4,2,3,6,1,4,2,3,6,1,5,2,3,1,5,3,5,4,2,3,3,2,3,1,3,5,4,4,2,3,3,3,3,3,1,5,4,2,3,6,1,3,3,3,3,3,5,5,3,3,5,4,2,3,6,1,3,3,5,5,6,5,5,3,3,6,2,3,1,5,5,3,5,5,3,5,3,3,3,5,5,4,2,3,6,1,5,4,2,3,6,1,5,4,2,3,6,1,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bootflags",3]],null,[[["bootflags",3]],["bootflags",3]],[[["bootflags",3]]],[[["bootflags",3]],["bootflags",3]],[[["bootflags",3]]],[[],["u16",15]],[[["bootflags",3]],["bootflags",3]],[[["bootflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["platform",4]],[[],["colormode",4]],[[],["bootflags",3]],[[],["bootmemorymapdescriptor",3]],[[],["bootmemorytype",4]],null,[[["colormode",4]],["ordering",4]],[[["bootflags",3]],["ordering",4]],[[["bootmemorytype",4]],["ordering",4]],null,[[["bootflags",3]],["bool",15]],[[],["bootinfo",3]],[[]],[[]],[[]],[[],["bootflags",3]],[[["colormode",4]],["bool",15]],[[["bootflags",3]],["bool",15]],[[["bootmemorytype",4]],["bool",15]],[[["intoiterator",8]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],[["bootflags",3],["option",4]]],[[["u16",15]],["bootflags",3]],[[["u16",15]],["bootflags",3]],[[["intoiterator",8]],["bootflags",3]],[[]],null,null,[[["bootflags",3]]],[[["bootflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[["bootflags",3]],["bool",15]],[[],["bootflags",3]],null,[[["colormode",4]],[["option",4],["ordering",4]]],[[["bootflags",3]],[["option",4],["ordering",4]]],[[["bootmemorytype",4]],[["option",4],["ordering",4]]],null,null,[[["bootflags",3]]],null,null,[[["bootflags",3],["bool",15]]],null,[[["bootflags",3]],["bootflags",3]],[[["bootflags",3]]],[[["bootflags",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[4,"BootMemoryType"],[4,"ColorMode"],[3,"BootFlags"],[4,"Platform"],[3,"BootInfo"],[3,"BootMemoryMapDescriptor"]]},\
"kernel":{"doc":"","t":[0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,14,0,0,12,12,12,12,13,18,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,18,13,13,13,13,13,4,3,3,4,13,13,13,13,13,13,13,13,4,4,13,4,13,4,4,4,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,18,13,3,13,13,13,13,13,13,13,13,13,13,13,18,18,13,13,18,18,18,3,13,3,13,13,18,18,13,13,13,13,13,13,18,18,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,18,18,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,18,13,13,13,13,4,13,13,13,13,18,13,3,13,13,13,13,13,18,13,13,13,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,3,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,13,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,0,12,12,12,18,18,18,18,18,18,18,13,18,18,13,13,13,18,18,18,18,3,3,4,3,3,3,3,3,8,8,3,13,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,8,10,10,3,3,3,3,3,3,6,6,6,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,18,18,18,18,18,18,18,18,3,3,3,3,6,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,13,8,4,8,6,8,10,11,11,11,11,11,10,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,4,4,18,13,13,13,3,3,4,13,18,13,18,18,18,18,13,13,13,13,13,13,18,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,8,8,13,3,3,13,8,4,3,12,12,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,10,10,0,12,10,10,10,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,3,13,4,6,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,13,4,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,0,11,11,11,0,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,18,13,13,13,13,13,4,18,3,13,13,13,13,13,4,3,3,13,13,13,3,4,3,3,3,3,3,8,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,13,3,13,3,8,4,3,13,13,13,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,18,4,13,13,13,18,18,18,13,13,13,18,18,13,13,13,13,13,13,13,13,13,18,18,13,13,13,13,13,18,18,18,18,18,18,18,13,13,3,4,3,3,3,4,4,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,11,11,11,3,3,13,13,13,13,13,13,4,3,13,4,3,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11],"n":["arch","bus","dev","fs","fw","io","mem","print","println","rt","sync","system","task","ui","user","util","without_interrupts","cpu","page","0","0","0","0","ABM","AC","ACPI","ADX","AES","AF","AMX_BF16","AMX_INT8","AMX_TILE","APIC","AVX","AVX2","AVX512_4FMAPS","AVX512_4VNNIW","AVX512_BITALG","AVX512_BW","AVX512_CD","AVX512_DQ","AVX512_ER","AVX512_F","AVX512_IFMA","AVX512_PF","AVX512_VBMI","AVX512_VBMI2","AVX512_VL","AVX512_VNNI","AVX512_VP2INTERSECT","AVX512_VPOPCNTDQ","AlignmentCheck","ApicBase","BIG_DATA","BMI1","BMI2","Breakpoint","CET_IBT","CET_SS","CF","CLDEMOTE","CLFLUSHIPT","CLFSH","CLWB","CMOV","CMP_LEGACY","CNXT_ID","CR8_LEGACY","CStr","CX16","CX8","Cpu","CpuContextData","DBX","DCA","DE","DF","DS","DS_CPL","DTES64","Deadbeef","Debug","DefaultSize","DescriptorEntry","DescriptorPair","DescriptorType","DeviceNotAvailable","DivideError","DoubleFault","ENQCMD","ERMS","EST","EXTAPIC","Efer","ExceptionType","F01C","F01C","F01D","F01D","F070B","F070C","F070D","F07B","F07C","F07D","F16C","F81C","F81C","F81D","F81D","FDP_EXCPTN_ONLY","FMA","FMA4","FPU","FSGSBASE","FSRM","FXSR","Feature","FloatingPointException","Fmask","FsBase","GFNI","GRANULARITY","GeneralProtection","GlobalDescriptorTable","GsBase","HLE","HTT","HYBRID","HYPERVISOR","IA32_ARCH_CAPABILITIES","IA32_CORE_CAPABILITIES","IA32_TSC_ADJUST","IA64","IBRS_IBPB","IBS","ID","IF","INTEL_PT","INVPCID","IOPL3","IPI_INVALIDATE_TLB","IPI_SCHEDULE","InterruptDescriptorTable","InterruptGate","InterruptVector","InvalidOpcode","InvalidTss","KERNEL_CODE","KERNEL_DATA","Kernel","KernelGsBase","L1D_FLUSH","LA57","LAHF_LM","LBR","LEGACY_CODE","LEGACY_DATA","LM","LStar","LWP","Limit","MCA","MCE","MD_CLEAR","MGE","MISALIGNSSE","MMX","MONITOR","MOVBE","MOVDIR64B","MOVDIRI","MPX","MSR","MTRR","MachineCheck","MaxReserved","MiscEnable","Msr","NODEID_MSR","NT","NULL","NX","NonMaskable","Null","OF","OSPKE","OSVW","OSXSAVE","Overflow","PAE","PAT","PBE","PCID","PCLMULQDQ","PCOMMIT","PCONFIG","PCX_L2I","PDCM","PDPE1GB","PERFCTR_CORE","PERFCTR_NB","PERFTSC","PF","PKS","PKU","POPCNT","PQE","PQM","PREFETCHWT1","PRESENT","PSE","PSE36","PSN","PageFault","PrivilegeLevel","RDPID","RDRND","RDSEED","RDTSCP","RF","RTM","Rflags","Ring1","Ring2","SDBG","SEP","SERIALIZE","SF","SGX","SGX_LC","SHA","SIZE_OF_CONTEXT","SIZE_OF_STACK","SKINIT","SMAP","SMEP","SMX","SRBDS_CTRL","SS","SSBD","SSE","SSE2","SSE3","SSE4A","SSE4_1","SSE4_2","SSSE3","STIBP","SVM","SYSCALL","SYSTEM_TSS","Security","SegmentNotPresent","Selector","SimdException","StackException","Star","TBM","TCE","TF","TM","TM2","TOPOEXT","TSC","TSC_DEADLINE","TSXLDTRK","TSX_FORCE_ABORT","TrapGate","Tsc","TscAux","TscDeadline","Tss","TssBusy","UMIP","Use16","Use32","Use64","User","VAES","VIF","VIP","VM","VME","VMX","VPCLMULQDQ","Virtualization","WAITPKG","WDT","X2APIC","XOP","XSAVE","XTPR","ZF","_3DNOWPREFETCH","all","as_descriptor_entry","as_descriptor_entry","as_descriptor_entry","as_vec","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breakpoint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code_legacy","code_segment","contains","cpu_index","current_processor_index","current_processor_type","data_legacy","data_segment","default_operand_size","disable_interrupt","empty","enable_interrupt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_descriptor","from_i64","from_iter","from_u64","from_usize","gate_descriptor","halt","has_feature","hash","high","in16","in32","in8","index","init","insert","interlocked_compare_and_swap","interlocked_fetch_update","interlocked_increment","interlocked_swap","interlocked_test_and_clear","interlocked_test_and_set","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invoke_legacy","is_all","is_code_segment","is_empty","is_null","is_present","is_segment","item","item_mut","low","ne","ne","ne","ne","ne","ne","new","new","new","not","null","out16","out32","out8","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","processor_type","rdtscp","read","read_tsc","register","register_msi","remove","reset","rpl","secure_rand","secure_rand_unsafe","secure_srand_unsafe","set","set_tsc_base","spin_loop_hint","stop","sub","sub_assign","switch","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","without_interrupts","write","PhysicalAddress","pci","0","0","0","AGP","AGP_8X","COMPACT_PCI","HOT_PLUG","HOT_SWAP","HYPER_TRANSPORT","INVALID","IsolatedIO","MSI","MSI_X","Mmio1MB","Mmio32","Mmio64","NULL","PCI_EXPRESS","PCI_X","PM","Pci","PciBar","PciBarType","PciCapabilityId","PciClass","PciConfigAddress","PciDevice","PciDeviceId","PciDriver","PciDriverRegistrar","PciVendorId","Reserved","SLOT_ID","VENDOR_SPECIFIC","VOD","address","bar_type","bars","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","class_code","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","code","default","dev","device_id","devices","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_pci","fun","functions","get_bus","get_dev","get_fun","get_register","instantiate","interface","into","into","into","into","into","into","into","into","into","into","is_isolated_io","is_mmio","is_prefetchable","mask_bias","matches","name","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","raw_data","register","size","sub","subsys_device_id","subsys_vendor_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor_id","uart","Uart","read","write","FileManager","FsFileHandle","FsRawDirEntry","FsRawFileControlBlock","FsRawMetaData","FsRawReadDir","INodeType","NonZeroINodeType","OffsetType","SeekCur","SeekEnd","SeekSet","Whence","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","fmt","fmt","from","from","from","from","from","from","from","from","inode","into","into","into","into","into","into","into","into_iter","into_metadata","len","lseek","metadata","name","ne","new","new","next","open","partial_cmp","read","read_dir","read_to_end","stat","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","smbios","0","ADDITIONAL_INFO","BASEBOARD_INFO","BIOS_INFO","BIOS_LANGUAGE_INFO","BOOT_INTEGRITY_SERVICE","BUILT_IN_POINTING_DEVICE","CACHE_INFO","COOLING_DEVICE","DEFAULT_STRING","ELECTRICAL_CURRENT_PROBE","GROUP_ASSOCIATIONS","HARDWARE_SECURITY","HeaderType","IPMI_DEVICE_INFO","MANAGEMENT_CONTROLLER_HOST_INTERFACE","MANAGEMENT_DEVICE","MANAGEMENT_DEVICE_COMPONENT","MANAGEMENT_DEVICE_THRESHOLD_DATA","MEMORY_ARRAY_MAPPED_ADDRESS","MEMORY_CHANNEL","MEMORY_CONTROLLER_INFO","MEMORY_DEVICE","MEMORY_DEVICE_MAPPED_ADDRESS","MEMORY_MODULE_INFO","OEM_STRINGS","ONBOARD_DEVICES_EXTENDED_INFO","ONBOARD_DEVICE_INFO","OUT_OF_BAND_REMOTE_ACCESS","PHYSICAL_MEMORY_ARRAY","PORTABLE_BATTERY","PORT_CONNECTOR_INFO","PROCESSOR_ADDITIONAL_INFO","PROCESSOR_INFO","SYSTEM_BOOT_INFO","SYSTEM_CONFIGURATION_OPTIONS","SYSTEM_ENCLOSURE","SYSTEM_EVENT_LOG","SYSTEM_INFO","SYSTEM_POWER_CONTROLS","SYSTEM_POWER_SUPPLY","SYSTEM_RESET","SYSTEM_SLOTS","SmBios","SmBiosEntryV1","SmBiosHeader","TEMPERATURE_PROBE","TPM_DEVICE","VOLTAGE_PROBE","_32BIT_MEMORY_ERROR_INFO","_64BIT_MEMORY_ERROR_INFO","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","find","fmt","from","from","from","from","handle","header_size","header_type","into","into","into","into","iter","manufacturer_name","model_name","ne","partial_cmp","string","struct_size","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","emcon","hid","null","tty","EmConsole","attribute","borrow","borrow_mut","cursor_position","dims","from","into","is_cursor_enabled","new","read_async","reset","set_attribute","set_cursor_enabled","set_cursor_position","try_from","try_into","type_id","write_char","write_str","0","ALPHABET_MAX","ALPHABET_MIN","BREAK","BUTTON4","BUTTON5","BUTTON6","BUTTON7","BUTTON8","DELETE","ERR_POST_FAIL","ERR_ROLL_OVER","ERR_UNDEFINED","HidManager","INTERNATIONAL_1","INTERNATIONAL_2","INTERNATIONAL_3","INTERNATIONAL_4","INTERNATIONAL_5","INTERNATIONAL_6","INTERNATIONAL_7","INTERNATIONAL_8","INTERNATIONAL_9","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_BASKSPACE","KEY_C","KEY_D","KEY_DOWN_ARROW","KEY_E","KEY_ENTER","KEY_ESCAPE","KEY_F","KEY_F1","KEY_F10","KEY_F11","KEY_F12","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_LEFT_ARROW","KEY_M","KEY_N","KEY_NUM_LOCK","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_RIGHT_ARROW","KEY_S","KEY_SPACE","KEY_T","KEY_TAB","KEY_U","KEY_UP_ARROW","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KeyEvent","KeyEventFlags","KeyReportRaw","KeyboardState","LALT","LCTRL","LEFT","LGUI","LSHIFT","MIDDLE","MOD_MAX","MOD_MIN","Modifier","MouseButton","MouseEvent","MouseReport","MouseReportRaw","MouseState","NONE","NON_ALPHABET_MAX","NON_ALPHABET_MIN","NUMBER_MAX","NUMBER_MIN","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MAX","NUMPAD_MIN","RALT","RCTRL","RGUI","RIGHT","RSHIFT","Usage","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","buttons","buttons","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","contains","contains","contains","current","current_buttons","default","default","default","default","default","default","empty","empty","empty","empty","eq","eq","eq","eq","event_buttons","event_buttons","extend","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","has_alt","has_ctrl","has_shift","hash","hash","hash","insert","insert","insert","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_char","is_all","is_all","is_all","is_empty","is_empty","is_empty","key_data","keydata","modifier","modifier","ne","ne","ne","ne","new","new","normalize","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","point","post","prev","prev_buttons","process_key_report","process_mouse_report","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usage","x","x","x","y","y","y","Null","attribute","borrow","borrow_mut","cursor_position","dims","from","into","is_cursor_enabled","null","read_async","reset","set_attribute","set_cursor_enabled","set_cursor_position","try_from","try_into","type_id","write_str","CombinedTty","DeviceError","EndOfStream","NotReady","Tty","TtyError","TtyRead","TtyReadResult","TtyWrite","attribute","attribute","borrow","borrow","borrow_mut","borrow_mut","cursor_position","cursor_position","dims","dims","fmt","from","from","into","into","is_cursor_enabled","is_cursor_enabled","new","read_async","read_async","read_line_async","reset","reset","set_attribute","set_attribute","set_cursor_enabled","set_cursor_enabled","set_cursor_position","set_cursor_position","try_from","try_from","try_into","try_into","type_id","type_id","write_str","AllocationError","DeallocationError","EXEC","InvalidArgument","InvalidArgument","Kernel","MProtect","MemoryManager","MemoryMapRequest","Mmio","NONE","OutOfMemory","PAGE_SIZE_MIN","READ","READ_EXEC","READ_WRITE","Unexpected","Unexpected","Unsupported","Unsupported","User","Vram","WRITE","all","alloc","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","contains","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_memory_size","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersects","into","into","into","into","into","is_all","is_empty","mmap","mmio","ne","not","page_size_min","partial_cmp","pg_alloc","remove","reserved_memory_size","set","slab","static_alloc_real","statistics","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zalloc","zfree","CustomAlloc","alloc","borrow","borrow_mut","dealloc","from","into","try_from","try_into","type_id","Mmio","base","borrow","borrow_mut","clone","clone_into","fmt","from","from_bar","from_phys","from_virt","into","read_u32","read_u64","read_u8","size","to_owned","transmute","transmute_mut","try_from","try_into","type_id","write_u32","write_u64","write_u8","Arlequin","BinaryLoader","BinaryRecognizer","Hoe","LegacyAppContext","LoadedImageOption","Native","Personality","PersonalityContext","RuntimeEnvironment","argv","base_of_code","base_of_data","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","context","default","default","exit","fmt","fmt","from","from","from","from","haribote","image_base","image_size","into","into","into","into","invoke_legacy","invoke_start","load","megos","name","on_exit","option","recognize","recognize","size_of_code","size_of_data","stack_pointer","start","supported_extensions","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Hoe","HoeSyscallRegs","HrbBinaryLoader","HrbRecognizer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","context","default","eax","ebp","ebx","ecx","edi","edx","esi","fmt","from","from","from","from","identity","into","into","into","into","invoke_start","load","new","on_exit","option","recognize","syscall","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ArleBinaryLoader","ArleRuntime","WasmRecognizer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","context","from","from","from","into","into","into","invoke_start","load","new","new","on_exit","option","recognize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","LockResult","Mutex","MutexGuard","PoisonError","Poisoned","TryLockError","TryLockResult","WouldBlock","atomicflags","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","from","from","from","from","from","from","from","into","into","into","into","into_inner","lock","new","semaphore","spinlock","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","unlock","AtomicBitflags","EMPTY","borrow","borrow_mut","contains","default","empty","fmt","from","from_bits_unchecked","insert","into","is_empty","new","remove","set","test_and_clear","test_and_set","to_string","toggle","try_from","try_into","type_id","Semaphore","borrow","borrow_mut","from","into","lock","new","signal","synchronized","try_from","try_into","try_lock","type_id","unlock","wait","SpinLoopWait","Spinlock","borrow","borrow","borrow_mut","borrow_mut","default","default","fmt","from","from","into","into","lock","new","new","reset","synchronized","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","unlock","wait","0","DeviceInfo","Main","ProcessorCoreType","ProcessorIndex","Sub","System","Version","acpi","acpi_platform","activate_cpu","as_u32","boot_flags","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cpu","cpu_mut","current_device","current_processor","em_console","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","init","into","into","into","into","into","is_multi_processor_capable_kernel","main_screen","maj","manufacturer_name","min","model_name","name","ne","ne","new","num_of_active_cpus","num_of_performance_cpus","partial_cmp","patch","rel","reset","set_stdout","short_name","shutdown","smbios","sort_cpus","stdout","system_time","to_owned","to_owned","to_owned","to_string","total_memory_size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","Task","borrow","borrow_mut","executor","from","into","new","scheduler","try_from","try_into","type_id","Executor","borrow","borrow_mut","from","into","new","run","spawn","try_from","try_into","type_id","0","0","Apc","DIrql","Disabled","Dispatch","EPSILON","FullThrottle","High","High","IPI","Idle","Irql","JUST","JoinHandle","Low","MAX","Normal","OneShot","Passive","Priority","ProcessId","ProcessPool","Realtime","Running","Saving","Scheduler","SchedulerState","SpawnOption","ThreadHandle","TimeSpec","Timer","TimerEvent","TimerSource","TimerType","Window","add","as_usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","current","current_personality","current_pid","current_state","current_thread","default","default","default","default","default","epsilon","eq","eq","eq","eq","eq","eq","exit","fire","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_duration","from_i64","from_u64","from_usize","get_idle_statistics","into","into","into","into","into","into","into","into","into","into","into","into","into","into_usize","is_enabled","is_just","is_useful","join","join","join","measure","measure","monotonic","msleep","name","ne","ne","ne","new","new","new","one_shot","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","perform_tasks","personality","print_statistics","raise","repeat_until","reschedule","sch_setup_new_thread","schedule_timer","set_timer","sleep","sleep","spawn","spawn_async","start","start_process","to_duration","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","until","until","usage_per_cpu","usage_total","usleep","wake","window","with_priority","font","terminal","window","Cursive","FixedFontDriver","FixedSystem","FontDescriptor","FontDriver","FontFamily","FontManager","Japanese","SansSerif","Serif","SmallFixed","SystemUI","Terminal","base_height","base_height","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","draw_char","draw_char","draw_char","eq","fixed_system_font","fmt","from","from","from","from","into","into","into","into","is_scalable","is_scalable","is_scalable","line_height","line_height","new","new","partial_cmp","point","preferred_line_height","preferred_line_height","system_font","title_font","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ui_font","width","width_of","width_of","width_of","Terminal","TerminalAgent","attribute","borrow","borrow","borrow_mut","borrow_mut","cursor_position","dims","from","from","into","into","is_cursor_enabled","new","read_async","reset","set_attribute","set_cursor_enabled","set_cursor_position","try_from","try_from","try_into","try_into","type_id","type_id","write_str","0","0","Activated","BORDER","BitmapStrategy","Char","Close","Compact","DEFAULT","DEFAULT_BGCOLOR","DESKTOP_ITEMS","Deactivated","Draw","Expressive","FLOATING","FLOATING","Full","InconsistentCoordinates","Key","Key","MouseDown","MouseEnter","MouseLeave","MouseMove","MouseUp","NAKED","NORMAL","Native","NoBitmap","NonBitmap","Nop","NotFound","OPAQUE","PINCHABLE","POINTER","POPUP","POPUP_BARRIER","ROOT","TITLE","Timer","User","WindowBuilder","WindowDrawingError","WindowHandle","WindowLevel","WindowManager","WindowMessage","WindowPostError","WindowStyle","WindowSystemEvent","add_screen_insets","all","as_usize","bg_color","bg_color","bitand","bitand_assign","bitmap_strategy","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","center","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","contains","content_insets","content_rect","content_size","create_timer","default","draw","draw_in_rect","draw_into","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","frame","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_message","handle_default_message","hash","hide","insert","intersects","into","into","into","into","into","into","into","into","into","into","invalidate_rect","invalidate_screen","is_active","is_all","is_empty","is_enabled","is_pointer_visible","is_visible","level","main_screen_bounds","make_active","message_queue_size","move_by","move_to","ne","ne","ne","new","new","not","origin","partial_cmp","partial_cmp","partial_cmp","poll_message","post","post_key_event","post_mouse_event","read_message","refresh_if_needed","remove","resize_to","save_screen_to","screen_insets","set","set_bg_color","set_desktop_bitmap","set_desktop_color","set_frame","set_needs_display","set_pointer_visible","set_title","show","size","style","style_add","sub","sub_assign","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_screen_bounds","wait_message","while_hiding_pointer","without_message_queue","userenv","UserEnv","borrow","borrow_mut","from","into","try_from","try_into","type_id","rng","text","SecureRandom","borrow","borrow_mut","from","into","new","next","rand","try_from","try_into","type_id","AttributedString","AttributedStringBuilder","Bottom","Center","Center","CharWrapping","Leading","Left","LineBreakMode","LineStatus","Right","TextAlignment","TextProcessing","Top","Trailing","TrancatingTail","VerticalAlignment","WordWrapping","align","align","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_size","bounding_size","center","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","color","default","default","default","draw_text","draw_text","end_position","eq","eq","eq","fmt","fmt","fmt","fmt","font","font","from","from","from","from","from","from","from","height","into","into","into","into","into","into","into","line_break_mode","line_break_mode","line_statuses","new","new","start_position","text","text","to_owned","to_owned","to_owned","to_owned","trailing","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valign","valign","width","write_str"],"q":["kernel","","","","","","","","","","","","","","","","","kernel::arch","","kernel::arch::cpukernel::arch::page","kernel::bus","kernel::bus::pcikernel::dev","kernel::dev::uart","","","kernel::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::fw","kernel::fw::smbios","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::io","","","","kernel::io::emcon","","","","","","","","","","","","","","","","","","","","kernel::io::hidkernel::io::null","","","","","","","","","","","","","","","","","","","kernel::io::tty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::mem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::mem::alloc","","","","","","","","","","kernel::mem::mmio","","","","","","","","","","","","","","","","","","","","","","","","","kernel::rt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::rt::haribote","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::rt::megos","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::sync::atomicflags","","","","","","","","","","","","","","","","","","","","","","","kernel::sync::semaphore","","","","","","","","","","","","","","","kernel::sync::spinlock","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::task","","","","","","","","","","","kernel::task::executor","","","","","","","","","","","kernel::task::schedulerkernel::ui","","","kernel::ui::font","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::ui::terminal","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::ui::window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::user","kernel::user::userenv","","","","","","","","kernel::util","","kernel::util::rng","","","","","","","","","","","kernel::util::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The modules in the hierarchy below arch are …","","","Filesystem supports","Firmware supports","","Memory manager","","","Runtime Environment and Personalities","Classes to synchronize","A Computer System","Task scheduler","User Interface modules (windows, terminals, …)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Architecture-specific context data","","","","","","","","","","","","","","","","","","","","","","","CPUID Feature Function 0000_0001, ECX","","CPUID Feature Function 0000_0001, EDX","","CPUID Feature Function 0000_0007, EBX","CPUID Feature Function 0000_0007, ECX","CPUID Feature Function 0000_0007, EDX","","","","","CPUID Feature Function 8000_0001, ECX","","CPUID Feature Function 8000_0001, EDX","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ring 0, Kernel mode","","","","","","","","","","","Type of x86 segment limit","","","","","","","","","","","","","","","","","","","","The NULL selector that does not contain anything","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DPL, CPL, RPL and IOPL","","","","","","","","Ring 1, Useless in 64bit mode","Ring 2, Useless in 64bit mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of x86 segment selector","","","","","","","","","","","","","","","","","","","","","","","","Ring 3, User mode","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","","","","","","","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","","","","","Returns whether or not the specified CPUID feature is …","","","","","","Returns the index field in the selector","","Inserts the specified flags in-place.","","","","","","","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","Launch the 32-bit legacy mode application.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","Make a new instance of the selector from the specified …","","Returns the complement of this set of flags.","","","","","","","","","","","SAFETY: Does not check the CPUID feature bit","","SAFETY: Does not check the CPUID feature bit","","","Removes the specified flags in-place.","","Returns the requested privilege level in the selector","","SAFETY: Does not check the CPUID feature bit","SAFETY: Does not check the CPUID feature bit","Inserts or removes the specified flags depending on the …","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Isolated I/O","","","Under 1MB MMIO (obsoleted)","Any 32bit MMIO","Any 64bit MMIO","","","","","","PCI Base Address Register","","","A type that defines the PCI class code and interface.","","","","","","","Reserved","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an array of capability ID and register offset …","","","","","","","","","","","","","","","","","","","","Makes an instance from class code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Makes an instance from the PCI class code register (0x02)","","","","","","","","Chains the programming interface to the class code and …","","","","","","","","","","","Returns whether or not this BAR is an x86 isolated IO.","Returns whether or not this BAR is a memory-mapped IO.","","","Returns whether or not this instance matches the …","","","","","","","","","","","","","Chains subclasses to the class code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some Chinese products return the “Default string”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System Management BIOS Entry Point","","Common definition of SmBios’s structures","","","","","","","","","","","","","","","","","","","Finds a structure with the specified header type.","","","","","","","","","","","","","Returns an iterator that iterates through the SMBIOS …","Returns the system manufacturer name, if available","Returns the system model name, if available","","","","","","","","","","","","","","","","","","Emergency debugging console","Human Interface Device Manager","Null Device","TeleTypewriter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HidManager relays between human interface devices and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","USB HID BIOS Keyboard Raw Report","","","","","","","","","","Modifier keys as defined by the HID specification.","Mouse buttons as defined by the HID specification.","","","USB HID BIOS Mouse Raw Report","","","","","","","","","","","","","","","","","","","","","","","","Keyboard usage as defined by the HID specification.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","","","","","","","","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the data for which a valid key was pressed. …","","","","","","","","","","Returns the mouse report in a canonical format.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","for Kernel Mode Heap (base, length, attr)","","","","for MMIO (physical_address, length)","","","","","","","","","","","for User Mode Heap (base, length, attr)","for VRAM (physical_address, length)","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns an empty set of flags","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","","","Allocate pages","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Allocate a page on real memory","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Allocate kernel memory","Deallocate kernel memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","MEG-OS Arlequin subsystem","","","Haribote OS Emulation subsystem","Contextual data for legacy applications","","Kernel native process","","Contains a reference to the context of the current …","","","Base address of the code segment","Base address of the data segment","","","","","","","","","","","Gets the current personality context","","","","","","","","","","Haribote-OS Emulator","Base address of the application image","Size of the application image","","","","","","","","MEG-OS Arlequin subsystem","","Called to clean up resources before the process ends.","","Recognizes the binary format and returns the …","","Size of the code segment","Size of the data segment","Initial stack pointer","Application entry point","","","","","","","","","","","","","","","Contextual structure of the Haribote-OS Emulator subsystem","","","Recognize .HRB file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform Haribote-OS System Call","","","","","","","","","","","","","","Contextual structure of the MEG-OS Arlequin subsystem","Recognize .wasm file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A mutual exclusion primitive like std::sync::Mutex","","NOT YET IMPLEMENTED","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add SMP-initialized CPU cores to the list of enabled …","","","","","","","","","","","","","","","","","","","","","","","Returns an instance of the current processor.","","","","","","","","","","","","","","Initialize the system","","","","","","Returns whether the kernel is multiprocessor-capable.","Get main screen","","Returns the name of the manufacturer of the system, if …","","Returns the model name of the system, if available.","Returns the name of current system.","","","","Returns the number of active logical CPU cores.","Returns the number of performance CPU cores. Returns less …","","","","","","Returns abbreviated name of current system.","","","Sorts the list of CPUs by processor ID.","","Returns the current system time.","","","","","Returns the total amount of memory size in bytes.","","","","","","","","","","","","","","","","Returns the version of current system.","","","","","","","","Scheduler","","","","","","","","","","","","","","","","","","","The scheduler has not started yet.","","","The scheduler is running on maximum power.","Higher than normal priority","","","This is the lowest priority at which the processor will …","Interrupt Request Level","","","Lower than normal proirity","","This is the normal priority that is scheduled in a …","","","Thread Priority","","","Currently, the highest priority and will not be preempted.","The scheduler is running.","The scheduler is running on minimal power.","System Scheduler","","Build an option to start a new thread or process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the personality instance associated with the current …","Get the current process if possible","Returns the current state of the scheduler.","Get the current thread running on the current processor","","","","","","","","","","","","","","","","","","","","","","","All threads will stop.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether or not the thread scheduler is running.","","","","","","","","","","","","","","","","","","","","","","","","Performing Asynchronous Tasks","","","","","Perform the preemption","","Schedule a timer event","","","","Start the closure in a new thread.","Spawning asynchronous tasks","Start the specified function in a new thread.","Start the specified function in a new process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Window System","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unicode converted keyboard event","Requested to close the window","","","","Items on the desktop","","Needs to be redrawn","","","Floating window","","","Raw Keyboard event","Raw keyboard event","","","","","","","Normal window","","","","Dummy message","","","","The mouse pointer, which is also the foremost window.","Popup window","Popup barrier","Root window (desktop)","","Timer event","User Defined","","","","","","","","","","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","","","Create a timer associated with a window","","","","Draws the contents of the window on the screen as a …","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","Get the window message asynchronously.","Process window messages that are not handled.","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","","","","Supports asynchronous reading of window messages.","Post a window message.","","","Read a window message from the message queue.","","Removes the specified flags in-place.","","","","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for window messages to be read.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write text to bitmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write string to bitmap"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,6,10,10,10,7,9,8,10,10,11,8,8,8,8,8,8,8,11,11,8,11,10,11,12,13,4,8,8,12,10,11,6,11,8,7,8,7,5,9,5,13,9,7,0,0,5,9,7,6,7,9,9,13,12,0,0,0,0,12,12,12,11,8,9,5,13,0,0,14,0,14,0,0,0,14,14,14,9,0,14,0,14,8,9,5,7,8,10,7,0,12,13,13,11,4,12,0,13,8,7,10,9,10,10,8,7,10,5,6,6,8,8,6,3,3,0,15,0,12,12,2,2,16,13,10,11,5,10,2,2,17,13,5,0,7,7,10,7,5,7,9,9,11,11,8,7,7,12,12,13,0,5,6,2,17,12,15,6,11,5,9,12,7,7,7,9,9,8,10,5,9,17,5,5,5,6,11,11,9,8,8,11,4,7,7,7,12,0,11,9,8,17,6,8,0,16,16,9,7,10,6,8,11,8,18,18,5,8,8,9,10,7,10,7,7,9,5,9,9,9,10,5,17,2,12,12,0,12,12,13,5,5,6,7,9,5,7,9,10,10,15,13,13,13,15,15,11,19,19,19,16,11,6,6,6,7,9,11,12,11,5,9,5,9,9,6,5,6,16,15,19,12,6,6,6,6,6,6,6,20,18,21,22,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,20,18,21,22,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,20,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,6,4,4,6,20,20,20,4,4,4,20,6,20,6,1,2,16,15,3,12,19,4,23,13,6,14,7,9,8,11,10,17,5,6,6,6,6,6,1,2,16,15,3,12,19,13,20,18,21,22,14,7,9,8,11,10,17,5,6,1,2,16,16,15,3,3,12,19,4,23,13,6,6,6,19,12,6,12,16,4,20,20,6,23,20,20,20,2,18,6,20,20,20,20,20,20,6,20,18,21,22,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,20,6,4,6,4,4,4,21,21,23,6,1,2,3,4,23,18,2,23,6,4,20,20,20,6,1,16,3,13,20,20,13,20,22,20,6,20,2,20,20,20,6,20,20,20,6,6,18,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,6,20,18,21,22,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,19,4,23,13,20,18,21,22,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,4,20,18,21,22,14,7,9,8,11,10,17,5,6,1,2,16,15,3,12,19,4,23,13,20,13,0,0,24,25,26,26,26,26,26,26,26,24,27,26,26,27,27,27,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,27,26,26,26,28,29,28,29,30,31,24,25,28,29,27,26,32,30,31,24,25,28,29,27,26,32,31,28,28,31,24,25,29,27,26,32,31,24,25,29,27,26,32,31,24,25,26,32,31,31,28,30,31,24,25,27,26,31,24,25,28,29,27,26,32,30,31,24,25,28,29,27,26,26,32,32,31,28,31,31,31,31,33,32,30,31,31,24,25,28,29,27,26,32,29,29,29,27,32,34,31,24,25,26,31,24,25,26,32,31,29,32,28,28,31,24,25,29,27,26,32,30,31,24,25,28,29,27,26,32,30,31,24,25,28,29,27,26,32,30,31,24,25,28,29,27,26,32,28,0,0,35,35,0,0,0,0,0,0,0,0,0,36,36,36,0,37,38,39,40,41,42,36,37,38,39,40,41,42,36,42,36,42,36,42,42,42,36,37,38,39,40,41,42,36,36,39,37,38,39,40,41,42,36,38,39,40,41,39,39,42,39,40,38,37,42,41,37,41,41,42,36,37,38,39,40,41,42,36,37,38,39,40,41,42,36,37,38,39,40,41,42,36,0,43,43,43,43,43,43,43,43,43,44,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,43,43,43,43,43,44,45,46,44,43,45,46,44,43,43,43,43,43,45,43,45,46,44,43,44,44,44,45,46,44,43,45,45,45,43,43,44,44,43,45,46,44,43,45,46,44,43,45,46,44,43,0,0,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,49,50,50,50,50,50,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,51,51,50,51,51,50,48,48,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,51,51,51,50,51,0,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,52,48,51,49,53,54,55,56,50,57,58,52,48,51,49,53,54,55,56,50,57,58,58,56,58,48,51,49,53,55,56,50,57,58,48,51,49,53,55,56,50,57,58,48,51,49,50,51,49,50,54,57,48,51,53,50,57,58,51,49,50,57,48,51,49,50,58,58,51,49,50,55,48,51,51,51,51,51,49,49,49,49,49,53,54,55,56,50,50,50,50,50,57,58,52,48,51,49,53,54,55,56,50,57,58,51,49,50,51,49,50,51,49,50,51,49,50,51,51,51,51,49,50,51,49,50,51,49,50,52,48,51,49,53,54,55,55,56,50,57,58,55,51,49,50,51,49,50,55,53,55,53,48,51,49,50,55,58,56,51,49,50,48,51,49,50,58,55,54,57,54,57,51,49,50,51,49,50,51,49,50,51,49,50,48,51,49,53,55,56,50,57,58,51,49,50,52,48,51,49,53,54,55,56,50,57,58,52,48,51,49,53,54,55,56,50,57,58,52,48,51,49,53,54,55,56,50,57,58,55,56,57,58,56,57,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,60,60,60,0,0,0,0,0,61,62,62,60,62,60,61,62,61,62,60,62,60,62,60,61,62,62,63,62,64,61,62,61,62,61,62,61,62,62,60,62,60,62,60,62,0,0,65,66,67,68,0,0,0,68,65,66,69,65,65,65,66,67,66,67,68,68,65,65,0,65,65,65,65,65,65,65,69,65,66,67,68,69,65,66,67,68,65,66,67,68,65,66,67,68,65,65,65,65,65,65,65,65,65,65,66,67,68,69,69,65,66,67,68,65,65,65,65,65,65,65,69,65,66,67,68,65,65,69,0,65,65,69,65,69,65,69,65,0,69,69,65,65,65,66,67,68,65,69,65,66,67,68,69,65,66,67,68,69,65,66,67,68,69,69,0,70,70,70,70,70,70,70,70,70,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,0,0,72,0,0,72,0,0,0,73,74,74,75,72,73,74,75,72,73,74,74,74,76,73,74,75,73,74,75,72,73,74,0,74,74,75,72,73,74,75,77,77,0,73,76,77,78,75,74,74,74,74,75,74,75,72,73,74,75,72,73,74,75,72,73,74,0,0,0,0,79,80,81,82,79,80,81,82,79,82,82,82,82,82,82,82,82,82,79,80,81,82,80,79,80,81,82,80,80,81,79,80,81,79,79,80,81,82,79,80,81,82,79,80,81,82,0,0,0,83,84,85,83,84,85,84,83,84,85,83,84,85,83,83,83,85,84,83,85,83,84,85,83,84,85,83,84,85,0,0,0,0,86,0,0,86,0,87,88,89,86,87,88,89,86,87,88,88,88,89,87,87,87,88,89,86,86,87,88,89,86,87,87,87,0,0,87,88,89,86,87,88,89,86,87,87,88,89,86,87,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,92,93,92,93,92,93,93,92,93,92,93,92,92,93,93,92,92,93,92,93,92,92,93,92,93,94,0,95,0,0,95,0,0,96,96,96,97,96,96,98,97,94,95,96,98,97,94,95,97,94,95,97,94,95,97,96,96,96,96,96,97,94,95,97,97,94,95,96,98,97,94,95,96,96,98,97,94,95,96,96,97,98,97,98,96,97,94,97,98,98,97,97,97,96,96,96,96,96,96,96,96,97,94,95,97,98,96,98,97,94,95,96,98,97,94,95,96,98,97,94,95,96,0,99,99,0,99,99,99,0,99,99,99,0,100,100,100,100,100,100,100,100,100,100,101,102,103,103,104,103,101,104,105,103,103,105,0,106,0,105,104,105,107,103,0,0,0,105,104,104,0,0,0,0,0,0,0,0,0,107,101,108,109,110,111,112,104,106,101,107,105,113,102,108,103,109,110,111,112,104,106,101,107,105,113,102,108,103,104,106,101,107,105,102,108,103,104,106,101,107,105,102,108,103,104,101,105,102,108,103,103,109,109,109,109,106,101,105,113,102,106,104,101,105,102,108,103,109,112,104,106,101,107,105,102,108,103,109,109,110,111,112,104,106,101,101,107,105,113,102,108,103,114,103,103,106,109,109,110,111,112,104,106,101,107,105,113,102,108,103,106,109,106,105,111,102,108,114,106,106,106,108,101,102,108,110,106,108,112,104,101,105,102,108,103,109,110,109,103,106,109,0,109,106,109,106,110,109,110,110,114,104,106,101,107,105,102,108,103,109,110,111,112,104,106,101,107,105,113,102,108,103,109,110,111,112,104,106,101,107,105,113,102,108,103,109,110,111,112,104,106,101,107,105,113,102,108,103,112,106,109,109,106,108,112,110,0,0,0,115,0,115,0,0,0,0,115,115,115,115,115,115,116,117,118,117,115,119,118,117,115,119,115,119,115,119,115,116,117,119,115,118,115,118,117,115,119,118,117,115,119,116,117,119,117,119,117,119,115,119,116,117,118,118,115,119,118,117,115,119,118,117,115,119,118,117,115,119,118,117,116,117,119,0,0,120,121,120,121,120,120,120,121,120,121,120,120,120,120,120,120,120,120,121,120,121,120,121,120,120,122,123,124,125,0,124,124,126,125,127,122,124,124,126,125,122,128,129,130,124,124,124,124,124,124,125,122,126,129,126,124,128,125,125,122,122,122,122,125,124,124,0,0,0,0,0,0,0,0,0,127,125,123,131,123,125,125,131,125,125,125,125,125,127,131,130,125,122,126,123,129,128,124,127,131,130,125,122,126,123,129,128,124,131,131,125,122,126,123,129,128,124,125,122,126,123,129,128,124,123,125,122,123,125,123,123,123,123,126,123,123,123,125,125,122,126,123,125,125,125,125,125,125,122,126,123,129,128,124,131,123,127,131,130,125,122,126,123,129,128,124,125,125,125,125,123,123,125,123,125,125,127,131,130,125,122,126,123,129,128,124,123,127,123,125,125,127,127,123,131,127,123,131,123,123,125,122,123,131,123,125,131,125,122,123,123,123,127,127,123,123,125,123,127,127,125,123,127,127,123,123,127,123,123,131,131,131,125,125,131,123,125,122,126,123,129,128,124,125,127,131,130,125,122,126,123,129,128,124,127,131,130,125,122,126,123,129,128,124,127,131,130,125,122,126,123,129,128,124,127,123,127,131,0,0,132,132,132,132,132,132,132,0,0,0,133,133,133,133,133,133,133,133,133,133,0,0,134,135,134,136,135,135,0,0,135,0,0,134,135,136,0,136,137,138,137,138,139,136,135,134,140,137,138,139,136,135,134,140,137,139,138,136,135,134,140,136,135,134,140,137,138,136,135,134,137,139,140,136,135,134,136,135,134,140,137,138,137,138,139,136,135,134,140,140,137,138,139,136,135,134,140,137,138,139,137,138,140,137,138,136,135,134,140,138,137,138,139,136,135,134,140,137,138,139,136,135,134,140,137,138,139,136,135,134,140,137,138,140,139],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["rflags",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["interruptvector",3]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[],["usize",15]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["feature",4]],[[],["f01d",4]],[[],["f01c",4]],[[],["f070b",4]],[[],["f070c",4]],[[],["f070d",4]],[[],["f81d",4]],[[],["f81c",4]],[[],["rflags",3]],[[],["limit",3]],[[],["selector",3]],[[],["privilegelevel",4]],[[],["descriptortype",4]],[[],["interruptvector",3]],[[],["exceptiontype",4]],[[],["defaultsize",4]],[[],["descriptorentry",3]],[[],["descriptorpair",3]],[[],["msr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rflags",3]],["ordering",4]],[[["u32",15],["defaultsize",4],["privilegelevel",4]],["descriptorentry",3]],[[["defaultsize",4],["privilegelevel",4]],["descriptorentry",3]],[[["rflags",3]],["bool",15]],null,[[],["processorindex",3]],[[],["processorcoretype",4]],[[["u32",15],["privilegelevel",4]],["descriptorentry",3]],[[["privilegelevel",4]],["descriptorentry",3]],[[],[["option",4],["defaultsize",4]]],[[]],[[],["rflags",3]],[[]],[[["rflags",3]],["bool",15]],[[["limit",3]],["bool",15]],[[["selector",3]],["bool",15]],[[["privilegelevel",4]],["bool",15]],[[["descriptortype",4]],["bool",15]],[[["interruptvector",3]],["bool",15]],[[["exceptiontype",4]],["bool",15]],[[["defaultsize",4]],["bool",15]],[[["descriptorentry",3]],["bool",15]],[[["descriptorpair",3]],["bool",15]],[[["msr",4]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[["exceptiontype",4]]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["option",4],["rflags",3]]],[[["usize",15]],["rflags",3]],[[["usize",15]],["rflags",3]],[[["descriptorentry",3]],["option",4]],[[["i64",15]],["option",4]],[[["intoiterator",8]],["rflags",3]],[[["u64",15]],["option",4]],[[["usize",15]]],[[["descriptortype",4],["usize",15],["selector",3],["privilegelevel",4]],["descriptorpair",3]],[[]],[[["feature",4]],["bool",15]],[[]],null,[[["u16",15]],["u16",15]],[[["u16",15]],["u32",15]],[[["u16",15]],["u8",15]],[[],["usize",15]],[[["usize",15]]],[[["rflags",3]]],[[["usize",15],["atomicusize",3]]],[[["atomicusize",3]],[["result",4],["usize",15]]],[[["atomicusize",3]],["usize",15]],[[["usize",15],["atomicusize",3]],["usize",15]],[[["usize",15],["atomicusize",3]],["bool",15]],[[["usize",15],["atomicusize",3]],["bool",15]],[[["rflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["legacyappcontext",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["selector",3]],[["option",4],["descriptorentry",3]]],[[["selector",3]],[["descriptorentry",3],["option",4]]],null,[[["rflags",3]],["bool",15]],[[["limit",3]],["bool",15]],[[["selector",3]],["bool",15]],[[["interruptvector",3]],["bool",15]],[[["descriptorentry",3]],["bool",15]],[[["descriptorpair",3]],["bool",15]],[[]],[[["usize",15],["privilegelevel",4]]],[[["descriptorentry",3]]],[[],["rflags",3]],[[]],[[["u16",15]]],[[["u32",15],["u16",15]]],[[["u8",15],["u16",15]]],[[["rflags",3]],[["option",4],["ordering",4]]],[[["limit",3]],[["option",4],["ordering",4]]],[[["privilegelevel",4]],[["option",4],["ordering",4]]],[[["interruptvector",3]],[["option",4],["ordering",4]]],[[["msr",4]],[["option",4],["ordering",4]]],[[],["processorcoretype",4]],[[]],[[],["u64",15]],[[],["u64",15]],[[["privilegelevel",4],["usize",15],["interruptvector",3]]],[[],["result",4]],[[["rflags",3]]],[[]],[[],["privilegelevel",4]],[[],[["result",4],["u64",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u64",15]]],[[["rflags",3],["bool",15]]],[[["u64",15]]],[[]],[[]],[[["rflags",3]],["rflags",3]],[[["rflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["descriptorentry",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15],["limit",3]],["descriptorpair",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pciconfigaddress",3]],[[],["pcibartype",4]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]]],[[]],[[],["pciclass",3]],[[],["pciconfigaddress",3]],[[],["pcivendorid",3]],[[],["pcideviceid",3]],[[],["pcibar",3]],[[],["pcibartype",4]],[[],["pcicapabilityid",3]],[[],["pciclass",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pciconfigaddress",3]],["ordering",4]],[[["pcivendorid",3]],["ordering",4]],[[["pcideviceid",3]],["ordering",4]],[[["pcicapabilityid",3]],["ordering",4]],[[["u8",15]]],[[],["pciconfigaddress",3]],[[["u8",15]]],[[],["pcideviceid",3]],[[]],[[["pciconfigaddress",3]],["bool",15]],[[["pcivendorid",3]],["bool",15]],[[["pcideviceid",3]],["bool",15]],[[["pcibartype",4]],["bool",15]],[[["pcicapabilityid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]]],[[]],[[["u32",15]]],[[["u8",15]]],[[]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["pcidevice",3]],[["usize",15],["option",4]]],[[["u8",15]]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["bool",15]],[[],["str",15]],[[["pciconfigaddress",3]],["bool",15]],[[["pcivendorid",3]],["bool",15]],[[["pcideviceid",3]],["bool",15]],[[["pcicapabilityid",3]],["bool",15]],[[["pciconfigaddress",3]],[["option",4],["ordering",4]]],[[["pcivendorid",3]],[["option",4],["ordering",4]]],[[["pcideviceid",3]],[["option",4],["ordering",4]]],[[["pcicapabilityid",3]],[["option",4],["ordering",4]]],[[],["u32",15]],[[["u8",15]]],[[],["usize",15]],[[["u8",15]]],[[],["pcideviceid",3]],[[],["pcivendorid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["pcivendorid",3]],null,null,[[],[["result",4],["u8",15],["ttyerror",4]]],[[["u8",15]],[["result",4],["ttyerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fsfilehandle",3]],[[],["whence",4]],[[]],[[]],[[["fsfilehandle",3]],["ordering",4]],[[["fsfilehandle",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[],["nonzeroinodetype",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["fsrawmetadata",3],["option",4]]],[[],["offsettype",6]],[[["whence",4],["offsettype",6]],["offsettype",6]],[[],[["option",4],["fsrawmetadata",3]]],[[],["str",15]],[[["fsfilehandle",3]],["bool",15]],[[["string",3],["option",4],["fsrawmetadata",3],["nonzeroinodetype",6]]],[[["offsettype",6]]],[[],["option",4]],[[["str",15]],[["fsrawfilecontrolblock",3],["result",6]]],[[["fsfilehandle",3]],[["option",4],["ordering",4]]],[[],[["result",6],["usize",15]]],[[["str",15]],[["result",6],["fsrawreaddir",3]]],[[["vec",3]],[["result",6],["usize",15]]],[[],[["fsrawmetadata",3],["option",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["headertype",3]],[[]],[[["headertype",3]],["ordering",4]],[[["headertype",3]],["bool",15]],[[["headertype",3]],[["smbiosheader",3],["option",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["usize",15]],[[],["headertype",3]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],[[["headertype",3]],["bool",15]],[[["headertype",3]],[["option",4],["ordering",4]]],[[["usize",15]],[["option",4],["str",15]]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["fixedfontdriver",3]]],[[],[["box",3],["pin",3]]],[[],[["result",4],["ttyerror",4]]],[[["u8",15]]],[[["bool",15]],["bool",15]],[[["isize",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["char",15]]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifier",3]],[[],["keyeventflags",3]],[[],["mousebutton",3]],[[["modifier",3]],["modifier",3]],[[["keyeventflags",3]],["keyeventflags",3]],[[["mousebutton",3]],["mousebutton",3]],[[["modifier",3]]],[[["keyeventflags",3]]],[[["mousebutton",3]]],[[["modifier",3]],["modifier",3]],[[["keyeventflags",3]],["keyeventflags",3]],[[["mousebutton",3]],["mousebutton",3]],[[["modifier",3]]],[[["keyeventflags",3]]],[[["mousebutton",3]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["modifier",3]],["modifier",3]],[[["keyeventflags",3]],["keyeventflags",3]],[[["mousebutton",3]],["mousebutton",3]],[[["modifier",3]]],[[["keyeventflags",3]]],[[["mousebutton",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mousebutton",3]],null,null,[[],["usage",3]],[[],["modifier",3]],[[],["keyeventflags",3]],[[],["keyreportraw",3]],[[],["keyevent",3]],[[],["mousereport",3]],[[],["mousebutton",3]],[[],["mousestate",3]],[[],["mouseevent",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usage",3]],["ordering",4]],[[["modifier",3]],["ordering",4]],[[["keyeventflags",3]],["ordering",4]],[[["mousebutton",3]],["ordering",4]],[[["modifier",3]],["bool",15]],[[["keyeventflags",3]],["bool",15]],[[["mousebutton",3]],["bool",15]],null,null,[[],["usage",3]],[[]],[[],["keyreportraw",3]],[[]],[[],["mousestate",3]],[[],["mouseevent",3]],[[],["modifier",3]],[[],["keyeventflags",3]],[[],["mousebutton",3]],[[]],[[["usage",3]],["bool",15]],[[["modifier",3]],["bool",15]],[[["keyeventflags",3]],["bool",15]],[[["mousebutton",3]],["bool",15]],[[],["mousebutton",3]],null,[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["keyeventflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],[["modifier",3],["option",4]]],[[["u8",15]],[["keyeventflags",3],["option",4]]],[[["u8",15]],[["mousebutton",3],["option",4]]],[[["u8",15]],["modifier",3]],[[["u8",15]],["keyeventflags",3]],[[["u8",15]],["mousebutton",3]],[[["u8",15]],["modifier",3]],[[["u8",15]],["keyeventflags",3]],[[["u8",15]],["mousebutton",3]],[[["intoiterator",8]],["modifier",3]],[[["intoiterator",8]],["keyeventflags",3]],[[["intoiterator",8]],["mousebutton",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[["modifier",3]]],[[["keyeventflags",3]]],[[["mousebutton",3]]],[[["modifier",3]],["bool",15]],[[["keyeventflags",3]],["bool",15]],[[["mousebutton",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["char",15]],[[]],[[]],[[]],[[]],[[]],[[],["char",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],null,[[],["modifier",3]],null,[[["usage",3]],["bool",15]],[[["modifier",3]],["bool",15]],[[["keyeventflags",3]],["bool",15]],[[["mousebutton",3]],["bool",15]],[[["modifier",3],["keyeventflags",3],["usage",3]]],[[["point",3],["mousebutton",3]]],[[],[["isize",15],["mousereport",3]]],[[],["modifier",3]],[[],["keyeventflags",3]],[[],["mousebutton",3]],[[["usage",3]],[["option",4],["ordering",4]]],[[["modifier",3]],[["option",4],["ordering",4]]],[[["keyeventflags",3]],[["option",4],["ordering",4]]],[[["mousebutton",3]],[["option",4],["ordering",4]]],[[],["point",3]],[[]],null,null,[[["keyreportraw",3]]],[[["mousereport",3]]],[[["modifier",3]]],[[["keyeventflags",3]]],[[["mousebutton",3]]],[[["modifier",3],["bool",15]]],[[["keyeventflags",3],["bool",15]]],[[["bool",15],["mousebutton",3]]],[[["modifier",3]],["modifier",3]],[[["keyeventflags",3]],["keyeventflags",3]],[[["mousebutton",3]],["mousebutton",3]],[[["modifier",3]]],[[["keyeventflags",3]]],[[["mousebutton",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modifier",3]]],[[["keyeventflags",3]]],[[["mousebutton",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["usage",3]],null,null,null,null,null,null,null,[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["tty",8]],[[],[["box",3],["pin",3]]],[[],[["result",4],["ttyerror",4]]],[[["u8",15]]],[[["bool",15]],["bool",15]],[[["isize",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["tty",8]]],[[],[["box",3],["pin",3]]],[[],[["box",3],["pin",3]]],[[["usize",15]]],[[],[["result",4],["ttyerror",4]]],[[],[["result",4],["ttyerror",4]]],[[["u8",15]]],[[["u8",15]]],[[["bool",15]],["bool",15]],[[["bool",15]],["bool",15]],[[["isize",15]]],[[["isize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mprotect",3]],null,[[["mprotect",3]],["mprotect",3]],[[["mprotect",3]]],[[["mprotect",3]],["mprotect",3]],[[["mprotect",3]]],[[],["usize",15]],[[["mprotect",3]],["mprotect",3]],[[["mprotect",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mprotect",3]],[[],["allocationerror",4]],[[],["deallocationerror",4]],[[],["memorymaprequest",4]],[[]],[[]],[[]],[[]],[[["mprotect",3]],["ordering",4]],[[["mprotect",3]],["bool",15]],[[],["mprotect",3]],[[["mprotect",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["mprotect",3],["option",4]]],[[["usize",15]],["mprotect",3]],[[["usize",15]],["mprotect",3]],[[["intoiterator",8]],["mprotect",3]],[[]],[[["mprotect",3]]],[[["mprotect",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["memorymaprequest",4]],[["nonzerousize",3],["option",4]]],null,[[["mprotect",3]],["bool",15]],[[],["mprotect",3]],[[],["usize",15]],[[["mprotect",3]],[["option",4],["ordering",4]]],[[["layout",3]],[["nonzerousize",3],["option",4]]],[[["mprotect",3]]],[[],["usize",15]],[[["bool",15],["mprotect",3]]],null,[[],[["nonzerou8",3],["option",4]]],[[["stringbuffer",3]]],[[["mprotect",3]],["mprotect",3]],[[["mprotect",3]]],[[]],[[]],[[]],[[]],[[["mprotect",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["layout",3]],[["nonzerousize",3],["option",4]]],[[["layout",3],["nonzerousize",3],["option",4]],[["deallocationerror",4],["result",4]]],null,[[["layout",3]]],[[]],[[]],[[["layout",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["usize",15]],[[]],[[]],[[],["mmio",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[["pcibar",3]],["option",4]],[[["physicaladdress",6],["usize",15]],["option",4]],[[["usize",15],["nonzerousize",3]]],[[]],[[["usize",15]],["u32",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u8",15]],[[],["usize",15]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15],["u32",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["legacyappcontext",3]],[[]],[[],["personalitycontext",4]],[[],["loadedimageoption",3]],[[],["legacyappcontext",3]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["legacyappcontext",3]]],[[["box",3]],[["processid",3],["option",4]]],[[],["result",4]],null,null,[[]],[[],["loadedimageoption",3]],[[],[["option",4],["box",3]]],[[],[["option",4],["box",3]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["personalitycontext",4]],[[],["hoesyscallregs",3]],null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[["box",3]],[["processid",3],["option",4]]],[[],["result",4]],[[],["box",3]],[[]],[[],["loadedimageoption",3]],[[],[["option",4],["box",3]]],[[["hoesyscallregs",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["personalitycontext",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],[["processid",3],["option",4]]],[[],["result",4]],[[]],[[],["box",3]],[[]],[[],["loadedimageoption",3]],[[],[["option",4],["box",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutex",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["poisonerror",3]],["trylockerror",4]],[[]],[[]],[[]],[[]],[[]],[[],["lockresult",6]],[[],[["lockresult",6],["mutexguard",3]]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["mutexguard",3],["trylockresult",6]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["mutexguard",3]]],null,null,[[]],[[]],[[],["bool",15]],[[]],[[],["atomicbitflags",3]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["atomicbitflags",3]],[[]],[[]],[[],["bool",15]],[[],["atomicbitflags",3]],[[]],[[["bool",15]]],[[],["bool",15]],[[],["bool",15]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["spinlock",3]],[[],["spinloopwait",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["acpitables",3]],[[],["platforminfo",3]],[[["cpu",3],["box",3]]],[[],["u32",15]],[[],["bootflags",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["version",3]],[[],["processorindex",3]],[[],["processorcoretype",4]],[[]],[[]],[[]],[[["version",3]],["ordering",4]],[[["usize",15]],["cpu",3]],[[["usize",15]],["cpu",3]],[[],["deviceinfo",3]],[[],["cpu",3]],[[],["emconsole",3]],[[["version",3]],["bool",15]],[[["processorindex",3]],["bool",15]],[[["processorcoretype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["bootinfo",3]]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bitmap",4]],[[],["usize",15]],[[],[["option",4],["str",15]]],[[],["usize",15]],[[],[["option",4],["str",15]]],[[],["str",15]],[[["version",3]],["bool",15]],[[["processorindex",3]],["bool",15]],[[["str",15],["u8",15],["u16",15]],["version",3]],[[],["usize",15]],[[],["usize",15]],[[["version",3]],[["option",4],["ordering",4]]],[[],["usize",15]],[[],["str",15]],[[]],[[["tty",8],["box",3]]],[[],["str",15]],[[]],[[],[["option",4],["smbios",3]]],[[]],[[],["tty",8]],[[],["systemtime",3]],[[]],[[]],[[]],[[],["string",3]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["version",3]],null,[[]],[[]],null,[[]],[[]],[[],["task",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["task",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["timespec",3]]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["schedulerstate",4]],[[],["timer",3]],[[],["timespec",3]],[[],["timertype",4]],[[],["priority",4]],[[],["processid",3]],[[],["threadhandle",3]],[[],["irql",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["schedulerstate",4]],["ordering",4]],[[["timespec",3]],["ordering",4]],[[["priority",4]],["ordering",4]],[[["processid",3]],["ordering",4]],[[["threadhandle",3]],["ordering",4]],[[["irql",4]],["ordering",4]],[[],["irql",4]],[[],["option",4]],[[],[["processid",3],["option",4]]],[[],["schedulerstate",4]],[[],[["threadhandle",3],["option",4]]],[[],["timer",3]],[[],["timespec",3]],[[]],[[],["processpool",3]],[[],["processid",3]],[[]],[[["schedulerstate",4]],["bool",15]],[[["timespec",3]],["bool",15]],[[["priority",4]],["bool",15]],[[["processid",3]],["bool",15]],[[["threadhandle",3]],["bool",15]],[[["irql",4]],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["bool",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]],["timespec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]],["timespec",3]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[["usize",15]]],[[["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[]],[[]],[[],["timespec",3]],[[],["timespec",3]],[[],["duration",3]],[[["u64",15]]],[[],[["option",4],["str",15]]],[[["timespec",3]],["bool",15]],[[["processid",3]],["bool",15]],[[["threadhandle",3]],["bool",15]],[[]],[[["duration",3]]],[[["usize",15]],["option",4]],[[["timer",3]]],[[["schedulerstate",4]],[["option",4],["ordering",4]]],[[["timespec",3]],[["option",4],["ordering",4]]],[[["priority",4]],[["option",4],["ordering",4]]],[[["processid",3]],[["option",4],["ordering",4]]],[[["threadhandle",3]],[["option",4],["ordering",4]]],[[["irql",4]],[["option",4],["ordering",4]]],[[]],[[["box",3],["personality",8]]],[[["bool",15],["stringbuffer",3]]],[[]],[[]],[[]],[[]],[[["timerevent",3]],[["result",4],["timerevent",3]]],[[["box",3],["timersource",8]]],[[]],[[["duration",3]]],[[["str",15]],["joinhandle",3]],[[["task",3]]],[[["usize",15],["str",15]],[["threadhandle",3],["option",4]]],[[["usize",15],["str",15]],[["processid",3],["option",4]]],[[["timespec",3]],["duration",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[["u64",15]]],[[]],[[["windowhandle",3],["usize",15],["timer",3]]],[[["priority",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["isize",15]],[[],["isize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fontfamily",4]],[[],["fontdescriptor",3]],[[]],[[]],[[["fontfamily",4]],["ordering",4]],[[["somecolor",4],["char",15],["isize",15],["point",3],["bitmap",4]]],[[["somecolor",4],["char",15],["isize",15],["point",3],["bitmap",4]]],[[["somecolor",4],["char",15],["point",3],["bitmap",4]]],[[["fontfamily",4]],["bool",15]],[[],["fixedfontdriver",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["isize",15]],[[],["isize",15]],[[["usize",15]],["fixedfontdriver",3]],[[["fontfamily",4],["isize",15]],["option",4]],[[["fontfamily",4]],[["option",4],["ordering",4]]],[[],["isize",15]],[[],["isize",15]],[[],["isize",15]],[[],["fontdescriptor",3]],[[],["fontdescriptor",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["fontdescriptor",3]],[[],["isize",15]],[[["char",15]],["isize",15]],[[["char",15]],["isize",15]],[[["char",15]],["isize",15]],null,null,[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["usize",15]]],[[],[["box",3],["pin",3]]],[[],[["result",4],["ttyerror",4]]],[[["u8",15]]],[[["bool",15]],["bool",15]],[[["isize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["edgeinsets",3]]],[[],["windowstyle",3]],[[],["usize",15]],[[["somecolor",4]]],[[],["somecolor",4]],[[["windowstyle",3]],["windowstyle",3]],[[["windowstyle",3]]],[[["bitmapstrategy",4]]],[[["windowstyle",3]],["windowstyle",3]],[[["windowstyle",3]]],[[],["u8",15]],[[["windowstyle",3]],["windowstyle",3]],[[["windowstyle",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["windowhandle",3]],[[]],[[],["windowstyle",3]],[[],["windowlevel",3]],[[],["bitmapstrategy",4]],[[],["windowhandle",3]],[[],["windowdrawingerror",4]],[[],["windowposterror",4]],[[],["windowmessage",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowstyle",3]],["ordering",4]],[[["windowlevel",3]],["ordering",4]],[[["windowhandle",3]],["ordering",4]],[[["windowstyle",3]],["bool",15]],[[],["edgeinsets",3]],[[],["rect",3]],[[],["size",3]],[[["duration",3],["usize",15]]],[[]],[[],[["result",4],["windowdrawingerror",4]]],[[["rect",3]],[["result",4],["windowdrawingerror",4]]],[[["rect",3],["bitmap32",3]]],[[],["windowstyle",3]],[[["windowstyle",3]],["bool",15]],[[["windowlevel",3]],["bool",15]],[[["bitmapstrategy",4]],["bool",15]],[[["windowhandle",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["rect",3]]],[[],["rect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],[["windowstyle",3],["option",4]]],[[["u8",15]],["windowstyle",3]],[[["u8",15]],["windowstyle",3]],[[["intoiterator",8]],["windowstyle",3]],[[],[["box",3],["pin",3]]],[[["windowmessage",4]]],[[]],[[]],[[["windowstyle",3]]],[[["windowstyle",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rect",3]]],[[["rect",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["windowlevel",3]]],[[],["rect",3]],[[]],[[["usize",15]]],[[["point",3]]],[[["point",3]]],[[["windowstyle",3]],["bool",15]],[[["windowlevel",3]],["bool",15]],[[["windowhandle",3]],["bool",15]],[[["str",15]]],[[["usize",15]],["option",4]],[[],["windowstyle",3]],[[["point",3]]],[[["windowstyle",3]],[["option",4],["ordering",4]]],[[["windowlevel",3]],[["option",4],["ordering",4]]],[[["windowhandle",3]],[["option",4],["ordering",4]]],[[["context",3]],[["windowmessage",4],["option",4]]],[[["windowmessage",4]],[["result",4],["windowposterror",4]]],[[["keyevent",3]]],[[["mousestate",3]]],[[],[["windowmessage",4],["option",4]]],[[]],[[["windowstyle",3]]],[[["size",3]]],[[["rect",3],["bitmap32",3]]],[[],["edgeinsets",3]],[[["windowstyle",3],["bool",15]]],[[["somecolor",4]]],[[["constbitmap",4]]],[[["somecolor",4]]],[[["rect",3]]],[[]],[[["bool",15]],["bool",15]],[[["str",15]]],[[]],[[["size",3]]],[[["windowstyle",3]]],[[["windowstyle",3]]],[[["windowstyle",3]],["windowstyle",3]],[[["windowstyle",3]]],[[["str",15]]],[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowstyle",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["rect",3]],[[],[["windowmessage",4],["option",4]]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["textalignment",4]],[[["textalignment",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["size",3]],["size",3]],[[["str",15],["fontdescriptor",3],["usize",15],["linebreakmode",4],["size",3]],["size",3]],[[]],[[],["linebreakmode",4]],[[],["textalignment",4]],[[],["verticalalignment",4]],[[],["linestatus",3]],[[]],[[]],[[]],[[]],[[],["somecolor",4]],[[["somecolor",4]]],[[]],[[]],[[]],[[["rect",3],["usize",15],["bitmap",4]]],[[["somecolor",4],["str",15],["rect",3],["usize",15],["linebreakmode",4],["textalignment",4],["fontdescriptor",3],["verticalalignment",4],["bitmap",4]]],null,[[["linebreakmode",4]],["bool",15]],[[["textalignment",4]],["bool",15]],[[["verticalalignment",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["fontdescriptor",3]],[[["fontdescriptor",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["linebreakmode",4]],[[["linebreakmode",4]]],[[["str",15],["fontdescriptor",3],["usize",15],["linebreakmode",4],["size",3]],[["linestatus",3],["vec",3]]],[[],["attributedstringbuilder",3]],[[]],null,[[],["str",15]],[[["str",15]],["attributedstring",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["verticalalignment",4]],[[["verticalalignment",4]]],null,[[["somecolor",4],["str",15],["fontdescriptor",3],["point",3],["bitmap",4]]]],"p":[[3,"Limit"],[3,"Selector"],[3,"InterruptVector"],[3,"DescriptorEntry"],[4,"F81C"],[3,"Rflags"],[4,"F01D"],[4,"F070B"],[4,"F01C"],[4,"F070D"],[4,"F070C"],[4,"ExceptionType"],[4,"Msr"],[4,"Feature"],[4,"DescriptorType"],[4,"PrivilegeLevel"],[4,"F81D"],[3,"CpuContextData"],[4,"DefaultSize"],[3,"Cpu"],[3,"GlobalDescriptorTable"],[3,"InterruptDescriptorTable"],[3,"DescriptorPair"],[3,"PciVendorId"],[3,"PciDeviceId"],[3,"PciCapabilityId"],[4,"PciBarType"],[3,"PciDevice"],[3,"PciBar"],[3,"Pci"],[3,"PciConfigAddress"],[3,"PciClass"],[8,"PciDriverRegistrar"],[8,"PciDriver"],[8,"Uart"],[4,"Whence"],[3,"FileManager"],[3,"FsRawReadDir"],[3,"FsRawDirEntry"],[3,"FsRawMetaData"],[3,"FsRawFileControlBlock"],[3,"FsFileHandle"],[3,"HeaderType"],[3,"SmBiosHeader"],[3,"SmBios"],[3,"SmBiosEntryV1"],[3,"EmConsole"],[3,"Usage"],[3,"KeyEventFlags"],[3,"MouseButton"],[3,"Modifier"],[3,"HidManager"],[3,"KeyReportRaw"],[3,"KeyboardState"],[3,"KeyEvent"],[3,"MouseReport"],[3,"MouseState"],[3,"MouseEvent"],[3,"Null"],[4,"TtyError"],[8,"TtyWrite"],[3,"CombinedTty"],[8,"TtyRead"],[8,"Tty"],[3,"MProtect"],[4,"AllocationError"],[4,"DeallocationError"],[4,"MemoryMapRequest"],[3,"MemoryManager"],[3,"CustomAlloc"],[3,"Mmio"],[4,"PersonalityContext"],[3,"LoadedImageOption"],[3,"LegacyAppContext"],[3,"RuntimeEnvironment"],[8,"Personality"],[8,"BinaryLoader"],[8,"BinaryRecognizer"],[3,"Hoe"],[3,"HrbBinaryLoader"],[3,"HrbRecognizer"],[3,"HoeSyscallRegs"],[3,"ArleBinaryLoader"],[3,"ArleRuntime"],[3,"WasmRecognizer"],[4,"TryLockError"],[3,"Mutex"],[3,"MutexGuard"],[3,"PoisonError"],[3,"AtomicBitflags"],[3,"Semaphore"],[3,"Spinlock"],[3,"SpinLoopWait"],[3,"ProcessorIndex"],[4,"ProcessorCoreType"],[3,"System"],[3,"Version"],[3,"DeviceInfo"],[3,"Task"],[3,"Executor"],[3,"TimeSpec"],[3,"ProcessId"],[4,"Irql"],[4,"SchedulerState"],[4,"Priority"],[3,"Timer"],[4,"TimerType"],[3,"ThreadHandle"],[3,"Scheduler"],[3,"SpawnOption"],[3,"JoinHandle"],[3,"TimerEvent"],[3,"ProcessPool"],[8,"TimerSource"],[4,"FontFamily"],[8,"FontDriver"],[3,"FixedFontDriver"],[3,"FontManager"],[3,"FontDescriptor"],[3,"Terminal"],[3,"TerminalAgent"],[3,"WindowLevel"],[3,"WindowHandle"],[4,"WindowMessage"],[3,"WindowStyle"],[4,"BitmapStrategy"],[3,"WindowManager"],[4,"WindowPostError"],[4,"WindowDrawingError"],[4,"WindowSystemEvent"],[3,"WindowBuilder"],[3,"UserEnv"],[3,"SecureRandom"],[4,"VerticalAlignment"],[4,"TextAlignment"],[4,"LineBreakMode"],[3,"AttributedString"],[3,"AttributedStringBuilder"],[3,"TextProcessing"],[3,"LineStatus"]]},\
"megosabi":{"doc":"","t":[17,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17],"n":["OPTION_CHAR_NONE","svc","window","Alloc","BeginDraw","BlendRect","Blt1","Blt32","Blt8","CloseWindow","DrawLine","DrawRect","DrawString","EndDraw","Exit","FillRect","Free","Function","GetSystemInfo","Monotonic","NewWindow","PrintString","Rand","ReadChar","Srand","Test","Time","Usleep","WaitChar","borrow","borrow_mut","clone","cmp","eq","fmt","from","from_i64","from_u64","into","partial_cmp","try_from","try_into","type_id","TRANSPARENT_WINDOW","USE_BITMAP32"],"q":["megosabi","","","megosabi::svc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megosabi::window",""],"d":["Invalid character representation in Rust","","","RESERVED","Create a drawing context","Blend (test)","Draw a bitmap in a window","Draw a bitmap in a window","Draw a bitmap in a window","Close a window","Draw a line in a window","Draw a rectangle in a window","Draw a string in a window","Discard the drawing context and reflect it to the screen","Terminate the process normally","Fill a rectangle in a window","RESERVED","","Get the system information","Get the value of the monotonic timer in microseconds","Create a new window","Display a string","Return a random number","Read a char event","Set the seed of the random number","test_u64","Perform the time service","Blocks a thread for the specified microseconds","Wait for char event","","","","","","","","","","","","","","","Transparent Window","Use 32bit bitmap in window"],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["function",4]],[[["function",4]],["ordering",4]],[[["function",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[]],[[["function",4]],[["option",4],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null],"p":[[4,"Function"]]},\
"megstd":{"doc":"MEG-OS standard library like std","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,0,11,11,11,0,0,0,11,11,11,11,11,11,11,0,11,12,13,13,13,13,13,18,18,18,18,18,18,8,4,3,3,3,13,8,8,4,4,3,3,18,18,18,3,8,16,4,3,3,3,13,18,18,18,18,3,8,3,18,18,8,3,13,13,13,13,13,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,8,3,4,18,3,18,18,8,8,3,8,3,4,18,18,18,3,18,18,18,18,18,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,10,11,11,11,11,11,12,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,8,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,3,13,3,4,13,13,13,13,13,13,13,13,8,4,6,13,13,13,13,8,13,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,3,4,13,13,13,13,13,3,3,4,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,8,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,17,17,17,17,17,17,17,17,17,17,18,18,3,18,3,3,3,3,3,18,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,12,12,11,11,11,11,18,3,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["OsStr","OsString","as_os_str","as_ref","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","cmp","default","deref","deref_mut","drawing","eq","eq","error","fmt","fmt","from","from","fs","ge","gt","hash","index","index_mut","into","into_boxed_os_str","into_os_string","io","is_empty","le","len","lt","new","new","partial_cmp","partial_cmp","path","push","rand","reserve","reserve_exact","shrink_to_fit","string","sys","time","to_os_string","to_owned","to_str","try_from","try_into","type_id","type_id","uuid","with_capacity","0","Argb32","Argb32","Argb32","Argb32","Argb32","BLACK","BLACK","BLUE","BLUE","BROWN","BROWN","BasicDrawing","Bitmap","Bitmap32","Bitmap8","BitmapFlags","Blend","Blt","BltConverter","BltMode","BoxedBitmap","BoxedBitmap32","BoxedBitmap8","COLOR_PALETTE","CYAN","CYAN","ColorComponents","ColorTrait","ColorType","ConstBitmap","ConstBitmap32","ConstBitmap8","Coordinates","Copy","DARK_GRAY","DARK_GRAY","DEFAULT_KEY","DEFAULT_KEY","DeepColor30","Drawable","EdgeInsets","GREEN","GREEN","GetPixel","ImageLoader","Indexed","Indexed","Indexed","Indexed","Indexed","IndexedColor","LIGHT_BLUE","LIGHT_BLUE","LIGHT_CYAN","LIGHT_CYAN","LIGHT_GRAY","LIGHT_GRAY","LIGHT_GREEN","LIGHT_GREEN","LIGHT_MAGENTA","LIGHT_MAGENTA","LIGHT_RED","LIGHT_RED","MAGENTA","MAGENTA","MAX","MIN","MutableRasterImage","OperationalBitmap","OwnedBitmap","PORTRAIT","Point","RED","RED","RasterFontWriter","RasterImage","Rect","SetPixel","Size","SomeColor","TRANSLUCENT","TRANSPARENT","TRANSPARENT","TrueColor","WHITE","WHITE","WHITE","YELLOW","YELLOW","a","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","all","argb","as_argb","as_bitmap","as_bitmap","as_const","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_rgb","as_true_color","b","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blend","blend_color","blend_color","blend_draw","blend_each","blend_each","blend_rect","blt","blt","blt","blt","blt","blt","blt32","blt8","blt_affine","blt_blend","blt_convert","blt_convert","blt_convert_opt","blt_convert_opt","blt_itself","blt_main","blt_main","blt_transparent","blt_with_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","bounds","bounds","brightness","center","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_mode","components","components","comprehensive","contains","default","default","default","default","default","draw","draw","draw_circle","draw_circle","draw_font","draw_font","draw_font","draw_hline","draw_hline","draw_hline","draw_hline","draw_line","draw_line","draw_line","draw_rect","draw_rect","draw_round_rect","draw_round_rect","draw_vline","draw_vline","draw_vline","draw_vline","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fill","fill_circle","fill_circle","fill_rect","fill_rect","fill_rect","fill_rect","fill_round_rect","fill_round_rect","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_argb","from_argb","from_bits","from_bits_truncate","from_bits_unchecked","from_bytes","from_bytes","from_bytes","from_bytes","from_iter","from_msdib","from_rect","from_rect_unchecked","from_rgb","from_rgb","from_rgb","from_rgb","from_slice","from_slice","from_slice","from_slice","from_static","from_static","from_true_color","from_two","from_vec","g","get_pixel","get_pixel","get_pixel_unchecked","get_pixel_unchecked","gray","hash","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","inner","inner","insert","insets_by","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_argb","into_true_color","is_all","is_empty","is_opaque","is_opaque","is_transparent","is_transparent","is_within","is_within_rect","left","left","left_bottom","left_top","line_to","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","not","opacity","origin","origin","padding_each","partial_cmp","process_pixel_unchecked","process_pixel_unchecked","r","remove","reset","rgb","rgb","right","right","right_bottom","right_top","same_format","set","set_opacity","set_pixel","set_pixel","set_pixel_unchecked","set_pixel_unchecked","size","size","size","size","size","slice","slice","slice","slice","slice","slice","slice","slice","slice_mut","slice_mut","slice_mut","slice_mut","slice_mut","slice_mut","stride","stride","stride","stride","stride","stride","stride","stride","stride","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","top","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","view","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","x","x","x","y","y","y","Error","DirEntry","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create","create","create_new","eq","eq","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into_iter","is_block_device","is_char_device","is_dir","is_dir","is_fifo","is_file","is_file","is_socket","is_symlink","len","metadata","ne","ne","new","next","open","open","path","permissions","read","read","read_dir","readonly","set_len","set_permissions","set_readonly","sync_all","sync_data","to_owned","to_owned","to_owned","to_owned","truncate","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","AddrInUse","AddrNotAvailable","AlreadyExists","BrokenPipe","ConnectionAborted","ConnectionRefused","ConnectionReset","Custom","Custom","Error","ErrorKind","Interrupted","InvalidData","InvalidInput","NotConnected","NotFound","Os","Other","PermissionDenied","Read","Repr","Result","Simple","TimedOut","UnexpectedEof","WouldBlock","Write","WriteZero","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw_os_error","get_mut","get_ref","hash","into","into","into","into","into_inner","kind","last_os_error","new","partial_cmp","raw_os_error","read","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","Ancestors","Component","CurDir","DeviceNS","Disk","Normal","ParentDir","Path","PathBuf","Prefix","Prefix","PrefixComponent","RootDir","UNC","Verbatim","VerbatimDisk","VerbatimUNC","ancestors","as_os_str","as_os_str","as_os_str","as_path","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","ends_with","eq","eq","eq","extension","file_name","file_stem","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","has_root","hash","hash","hash","into","into","into","into","into","into_boxed_path","into_iter","into_os_string","is_absolute","is_relative","is_verbatim","join","kind","ne","ne","new","new","next","parent","partial_cmp","partial_cmp","partial_cmp","pop","push","reserve","reserve_exact","set_extension","set_file_name","shrink_to_fit","starts_with","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_buf","to_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_extension","with_file_name","Output","Output","Prng","Rng","XorShift32","XorShift64","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","into","into","new","new","next","next","next","rand","rand","rand","try_from","try_from","try_into","try_into","type_id","type_id","Sb255","StringBuffer","as_str","as_str","backspace","borrow","borrow","borrow_mut","borrow_mut","clear","clear","from","from","into","into","len","len","new","new","split","try_from","try_from","try_into","try_into","type_id","type_id","with_capacity","write_str","write_str","fcntl","fs_imp","path","O_ACCMODE","O_APPEND","O_CREAT","O_EXCL","O_NOCTTY","O_NONBLOCK","O_RDONLY","O_RDWR","O_TRUNC","O_WRONLY","APPEND","CREAT","DirEntry","EXCL","File","FileType","Metadata","OpenOptions","Permissions","READ","ReadDir","TRUNC","WRITE","all","append","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","contains","create","create_new","default","empty","eq","eq","eq","extend","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersects","into","into","into","into","into","into","into","into_iter","is_all","is_block_device","is_char_device","is_dir","is_empty","is_fifo","is_file","is_socket","is_symlink","len","metadata","ne","ne","ne","new","next","not","open","partial_cmp","path","permissions","read","read","readonly","remove","set","set_readonly","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","MAIN_SEP_STR","SystemTime","borrow","borrow_mut","clone","clone_into","fmt","from","into","nanos","secs","to_owned","try_from","try_into","type_id","NULL","Uuid","UuidVersion","V1","V2","V3","V4","V5","V6","V7","V8","as_slice","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","eq","fmt","fmt","from","from","from_i64","from_parts","from_slice","from_u64","into","into","ne","null","partial_cmp","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","version"],"q":["megstd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megstd::drawingmegstd::error","megstd::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megstd::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megstd::path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megstd::rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megstd::string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megstd::sys","","","megstd::sys::fcntl","","","","","","","","","","megstd::sys::fs_imp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","megstd::sys::path","megstd::time","","","","","","","","","","","","","","megstd::uuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Common color trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clone a bitmap","","Clone a bitmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","","","","","","","","","","","","","","SAFETY: Must guarantee the existence of the <code>ptr</code>.","SAFETY: Must guarantee the existence of the <code>ptr</code>.","","","","","","","SAFETY: The point must be within the size range.","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","Removes the specified flags in-place.","","","","","","","","","Inserts or removes the specified flags depending on the …","","","","SAFETY: The point must be within the size range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","","","","","","","","","","Disables all flags enabled in the set.","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a bitmap vieweturns the raw [<code>OsStr</code>] slice for this prefix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the parsed prefix data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pseudo Random Number Generator","Random Number Generator","","","","","","","","","","","","","","","","","","","","","","","","","","","Small String Buffer","","SAFETY: This method does not strictly conform to Rust’s …","SAFETY: This method does not strictly conform to Rust’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> all of the flags in <code>other</code> are contained …","","","","Returns an empty set of flags","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","","","","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,2,1,2,1,2,1,1,1,1,1,2,1,1,1,0,2,2,0,2,1,1,1,0,2,2,2,1,1,1,1,2,0,2,2,2,2,2,1,2,2,0,1,0,1,1,1,0,0,0,2,1,2,1,1,2,1,0,1,3,4,5,6,7,8,3,8,3,8,3,8,0,0,0,0,0,9,0,0,0,0,0,0,3,3,8,0,0,10,0,0,0,0,9,3,8,3,8,0,0,0,3,8,0,0,4,5,6,7,8,0,3,8,3,8,3,8,3,8,3,8,3,8,3,8,3,3,0,0,0,11,0,3,8,0,0,0,0,0,0,11,12,8,0,3,12,8,3,8,13,14,14,14,15,15,16,16,16,17,18,14,15,15,17,18,11,12,3,6,7,7,19,20,21,22,23,24,4,5,3,3,13,11,11,11,11,11,11,11,12,12,13,12,12,13,23,25,20,23,5,5,5,20,23,23,23,26,26,26,26,5,20,23,5,20,19,20,21,22,23,9,24,4,5,6,7,27,28,11,3,12,13,29,8,14,15,16,17,18,19,20,21,22,23,9,24,4,5,6,7,27,28,11,3,12,13,29,8,14,15,16,17,18,17,18,10,10,12,16,19,20,22,23,11,3,12,13,29,8,14,15,16,17,18,11,3,12,13,29,8,14,15,16,17,18,11,5,12,29,17,11,14,15,16,17,18,21,24,30,30,31,31,5,30,20,23,5,30,30,27,30,30,30,30,30,20,23,5,11,11,3,12,29,8,14,15,16,17,18,11,27,30,30,30,20,23,5,30,30,11,11,11,11,11,3,12,13,29,8,14,15,16,17,18,19,20,21,22,22,23,9,24,4,4,4,4,4,5,5,5,5,5,6,6,6,7,7,7,27,28,11,3,3,3,12,12,12,12,12,13,13,29,29,8,8,8,14,15,16,16,16,17,18,12,8,11,11,11,19,20,22,23,11,28,17,17,3,12,29,8,19,20,22,23,20,23,29,17,24,13,32,32,32,5,12,11,10,19,20,21,22,23,24,4,5,6,7,27,15,16,15,21,24,11,16,11,19,20,21,22,23,9,24,4,5,6,7,27,28,11,3,12,13,13,29,8,8,8,14,15,16,17,18,8,29,11,11,12,13,12,13,14,16,17,18,17,17,14,11,3,12,29,8,14,15,16,17,18,21,24,27,14,15,16,17,18,11,12,16,16,18,11,33,33,13,11,27,12,29,17,18,17,17,7,11,12,34,34,34,5,10,10,16,17,16,35,19,20,21,22,23,24,27,33,20,21,23,24,27,19,20,21,22,23,24,27,35,35,11,14,14,14,15,15,16,16,16,18,11,14,15,18,11,3,12,13,29,8,14,15,16,17,18,11,17,18,19,20,21,22,23,9,24,4,5,6,7,27,28,11,3,12,13,29,8,14,15,16,17,17,18,19,20,21,22,23,9,24,4,5,6,7,27,28,11,3,12,13,29,8,14,15,16,17,18,19,20,21,22,23,9,24,4,5,6,7,27,28,11,3,12,13,29,8,14,15,16,17,18,20,23,5,10,19,20,21,22,23,24,4,5,6,7,27,15,16,15,14,16,14,14,16,14,0,0,0,0,0,0,0,0,36,37,38,39,36,40,41,42,37,38,39,36,40,41,42,0,36,40,41,42,36,40,41,42,37,36,36,41,42,39,39,40,37,36,40,41,42,37,38,39,36,40,41,42,41,37,38,39,36,40,41,42,38,41,41,40,41,41,40,41,41,41,40,39,41,42,36,38,37,36,39,40,37,36,0,42,37,37,42,37,37,36,40,41,42,36,37,37,38,39,36,40,41,42,37,38,39,36,40,41,42,37,38,39,36,40,41,42,37,36,43,43,43,43,43,43,43,0,44,0,0,43,43,43,43,43,44,43,43,0,0,0,44,43,43,43,0,43,45,43,44,46,45,43,44,46,43,43,43,43,47,45,43,44,46,45,45,43,44,46,45,45,45,43,45,43,44,46,45,45,45,45,43,45,48,43,45,43,44,46,45,43,44,46,45,43,44,46,47,0,0,49,50,50,49,49,0,0,0,49,0,49,50,50,50,50,51,51,49,52,53,51,51,53,53,51,53,54,49,52,50,51,53,54,49,52,50,53,53,53,54,49,52,50,53,54,49,52,50,49,52,50,53,51,49,52,50,51,51,51,51,54,49,52,50,53,53,54,49,52,50,51,49,52,50,53,54,49,52,50,53,54,53,51,51,50,51,52,49,50,51,53,54,51,49,52,50,53,53,53,53,53,53,53,51,53,54,49,52,50,51,51,53,54,49,52,50,53,54,49,52,50,51,53,54,49,52,50,53,51,51,55,56,0,0,0,0,57,58,57,58,57,58,57,58,57,58,57,58,56,57,58,55,57,58,57,58,57,58,57,58,0,0,59,60,59,59,60,59,60,59,60,59,60,59,60,59,60,59,60,60,59,60,59,60,59,60,60,59,60,0,0,0,0,0,0,0,0,0,0,0,0,0,61,61,0,61,0,0,0,0,0,61,0,61,61,61,61,61,61,61,61,61,61,61,62,63,64,61,65,66,67,62,63,64,61,65,66,67,61,61,65,66,67,61,65,66,67,61,61,61,61,61,61,61,66,67,61,64,64,65,62,61,61,61,61,61,65,66,67,62,63,64,61,65,66,67,61,61,61,61,61,66,61,61,62,63,64,61,65,66,67,63,61,66,66,66,61,66,66,66,66,65,64,61,66,67,61,63,61,62,61,64,65,62,61,67,61,61,67,61,61,61,65,66,67,61,61,62,63,64,61,65,66,67,62,63,64,61,65,66,67,62,63,64,61,65,66,67,62,61,0,0,68,68,68,68,68,68,68,68,68,68,68,68,68,69,0,0,70,70,70,70,70,70,70,70,69,69,70,69,70,69,70,69,70,70,69,70,69,70,69,70,70,69,69,70,69,70,69,69,70,69,70,69,69,70,69,70,69,70,69],"f":[null,null,[[],["osstr",3]],[[],["osstr",3]],[[],["path",3]],[[],["osstr",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["osstring",3]],[[]],[[["osstr",3]],["ordering",4]],[[],["osstring",3]],[[],["osstr",3]],[[],["osstr",3]],null,[[["osstr",3]],["bool",15]],[[["str",15]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["pathbuf",3]],["osstring",3]],null,[[["osstr",3]],["bool",15]],[[["osstr",3]],["bool",15]],[[]],[[["rangefull",3]],["osstr",3]],[[["rangefull",3]],["osstr",3]],[[]],[[],[["osstr",3],["box",3]]],[[["osstr",3],["box",3]],["osstring",3]],null,[[],["bool",15]],[[["osstr",3]],["bool",15]],[[],["usize",15]],[[["osstr",3]],["bool",15]],[[],["osstr",3]],[[],["osstring",3]],[[["osstr",3]],[["option",4],["ordering",4]]],[[["str",15]],[["option",4],["ordering",4]]],null,[[["osstr",3],["asref",8]]],null,[[["usize",15]]],[[["usize",15]]],[[]],null,null,null,[[],["osstring",3]],[[]],[[],[["option",4],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["usize",15]],["osstring",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["size",3]]],[[["isize",15]]],[[]],[[["edgeinsets",3]]],[[["size",3]]],[[["point",3]]],[[["edgeinsets",3]]],[[]],[[]],[[]],[[["edgeinsets",3]]],[[]],[[]],[[]],[[],["bitmapflags",3]],[[],["u32",15]],[[],["u32",15]],[[],["bitmap",4]],[[],["bitmap",4]],[[],["constbitmap",4]],[[],["constbitmap8",3]],[[],["constbitmap8",3]],[[],["constbitmap8",3]],[[],["constbitmap32",3]],[[],["constbitmap32",3]],[[],["constbitmap32",3]],[[],["constbitmap",4]],[[],["constbitmap",4]],[[],["u32",15]],[[],["truecolor",3]],null,[[["bitmapflags",3]],["bitmapflags",3]],[[["bitmapflags",3]]],[[["bitmapflags",3]],["bitmapflags",3]],[[["bitmapflags",3]]],[[],["usize",15]],[[["bitmapflags",3]],["bitmapflags",3]],[[["bitmapflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rect",3],["truecolor",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3],["constbitmap32",3]]],[[["constbitmap8",3],["point",3],["rect",3]]],[[["rect",3],["point",3],["constbitmap",4]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3]]],[[["rect",3],["point",3],["option",4]]],[[["rect",3],["point",3],["bltmode",4]]],[[["rect",3],["point",3],["indexedcolor",3]]],[[["rect",3],["point",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["rect",3]],[[],["rect",3]],[[],["u8",15]],[[],["point",3]],[[]],[[],["bitmap8",3]],[[]],[[],["bitmap32",3]],[[],["bitmapflags",3]],[[],["indexedcolor",3]],[[],["truecolor",3]],[[],["colorcomponents",3]],[[],["deepcolor30",3]],[[],["somecolor",4]],[[],["point",3]],[[],["size",3]],[[],["rect",3]],[[],["coordinates",3]],[[],["edgeinsets",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bitmapflags",3]],["ordering",4]],[[],["usize",15]],[[],["colorcomponents",3]],[[]],[[]],[[["bitmapflags",3]],["bool",15]],[[],["point",3]],[[],["size",3]],[[],["rect",3]],[[],["coordinates",3]],[[],["edgeinsets",3]],[[]],[[]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[["size",3],["point",3]]],[[["size",3],["point",3]]],[[["size",3],["point",3]]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["rect",3]]],[[["rect",3]]],[[["rect",3],["isize",15]]],[[["rect",3],["isize",15]]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[],["bitmapflags",3]],[[["bitmapflags",3]],["bool",15]],[[["indexedcolor",3]],["bool",15]],[[["truecolor",3]],["bool",15]],[[["deepcolor30",3]],["bool",15]],[[["somecolor",4]],["bool",15]],[[["point",3]],["bool",15]],[[["size",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["coordinates",3]],["bool",15]],[[["edgeinsets",3]],["bool",15]],[[["intoiterator",8]]],[[["u8",15]]],[[["isize",15],["point",3]]],[[["isize",15],["point",3]]],[[["rect",3]]],[[["rect",3]]],[[["rect",3]]],[[["rect",3]]],[[["rect",3],["isize",15]]],[[["rect",3],["isize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["bitmap32",3]]],[[]],[[]],[[]],[[]],[[["bitmap32",3]]],[[["constbitmap8",3]],["constbitmap",4]],[[["bitmap8",3]]],[[]],[[["constbitmap32",3]],["constbitmap",4]],[[["bitmap32",3]],["bitmap",4]],[[["boxedbitmap",4]]],[[["bitmap8",3]],["bitmap",4]],[[]],[[["ownedbitmap",4]]],[[["bitmap8",3]]],[[]],[[["bitmap32",3]]],[[["boxedbitmap8",3]]],[[]],[[["boxedbitmap32",3]]],[[]],[[]],[[]],[[["u8",15]]],[[]],[[["truecolor",3]]],[[["colorcomponents",3]]],[[["indexedcolor",3]]],[[["deepcolor30",3]]],[[]],[[["u32",15]]],[[]],[[["truecolor",3]]],[[]],[[["truecolor",3]]],[[["indexedcolor",3]]],[[["truecolor",3]]],[[]],[[]],[[]],[[]],[[["size",3]]],[[["coordinates",3]],["rect",3]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[["usize",15]],[["option",4],["bitmapflags",3]]],[[["usize",15]],["bitmapflags",3]],[[["usize",15]],["bitmapflags",3]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["intoiterator",8]],["bitmapflags",3]],[[],[["option",4],["boxedbitmap",4]]],[[["rect",3]],[["coordinates",3],["result",4]]],[[["rect",3]],["coordinates",3]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["size",3],["usize",15]]],[[["size",3],["usize",15]]],[[["size",3],["usize",15]]],[[["size",3],["usize",15]]],[[["size",3],["usize",15]]],[[["size",3],["usize",15]]],[[["truecolor",3]]],[[["point",3]]],[[["size",3],["truecolor",3],["vec",3]],["boxedbitmap32",3]],null,[[["point",3]],["option",4]],[[["point",3]],["option",4]],[[["point",3]]],[[["point",3]]],[[["u8",15]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["isize",15]],[[],["isize",15]],null,[[],["bitmap8",3]],[[],["bitmap32",3]],[[["bitmapflags",3]]],[[["edgeinsets",3]]],[[["bitmapflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[],["truecolor",3]],[[],["indexedcolor",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["truecolor",3]],[[],["truecolor",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["rect",3]],["bool",15]],[[],["bool",15]],null,null,[[],["point",3]],[[],["point",3]],[[["point",3]]],[[["bitmapflags",3]],["bool",15]],[[["indexedcolor",3]],["bool",15]],[[["truecolor",3]],["bool",15]],[[["deepcolor30",3]],["bool",15]],[[["somecolor",4]],["bool",15]],[[["point",3]],["bool",15]],[[["size",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["coordinates",3]],["bool",15]],[[["edgeinsets",3]],["bool",15]],[[["size",3],["indexedcolor",3]],["boxedbitmap8",3]],[[["size",3],["truecolor",3]],["boxedbitmap32",3]],[[["size",3]]],[[["isize",15]]],[[["isize",15]]],[[["isize",15]]],[[["isize",15]]],[[["isize",15]]],[[],["bitmapflags",3]],[[],["u8",15]],[[],["point",3]],null,[[["isize",15]]],[[["bitmapflags",3]],[["option",4],["ordering",4]]],[[["point",3]]],[[["point",3]]],null,[[["bitmapflags",3]]],[[]],[[],["u32",15]],[[],["u32",15]],null,null,[[],["point",3]],[[],["point",3]],[[["size",3],["somecolor",4]],["boxedbitmap",4]],[[["bitmapflags",3],["bool",15]]],[[["u8",15]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["size",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["bitmapflags",3]],["bitmapflags",3]],[[]],[[["size",3]]],[[["isize",15]]],[[]],[[["edgeinsets",3]]],[[["point",3]]],[[["size",3]]],[[["edgeinsets",3]]],[[]],[[["bitmapflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bitmapflags",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["rect",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["rect",3]],["option",4]],[[["rect",3]],["option",4]],[[["rect",3]],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["isize",15]],[[],["isize",15]],null,[[],["isize",15]],[[],["isize",15]],null,[[],["isize",15]],[[],["isize",15]],null,null,null,null,null,null,null,null,null,[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8],["path",3]],[["result",6],["pathbuf",3]]],[[],["openoptions",3]],[[],["metadata",3]],[[],["filetype",3]],[[],["permissions",3]],[[]],[[]],[[]],[[]],[[["asref",8],["path",3]],[["result",6],["file",3]]],[[["bool",15]]],[[["bool",15]]],[[["filetype",3]],["bool",15]],[[["permissions",3]],["bool",15]],[[],["osstring",3]],[[],[["filetype",3],["result",6]]],[[],["filetype",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],[["result",6],["metadata",3]]],[[["filetype",3]],["bool",15]],[[["permissions",3]],["bool",15]],[[]],[[],[["option",4],["result",6]]],[[["asref",8],["path",3]],[["result",6],["file",3]]],[[["asref",8],["path",3]],[["result",6],["file",3]]],[[],["pathbuf",3]],[[],["permissions",3]],[[],[["usize",15],["result",6]]],[[["bool",15]]],[[["asref",8],["path",3]],[["result",6],["readdir",3]]],[[],["bool",15]],[[["u64",15]],["result",6]],[[["permissions",3]],["result",6]],[[["bool",15]]],[[],["result",6]],[[],["result",6]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[],[["result",6],["file",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6]]],[[["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errorkind",4]],[[]],[[["errorkind",4]],["ordering",4]],[[["errorkind",4]],["bool",15]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["errorkind",4]]],[[]],[[]],[[]],[[["i32",15]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["box",3]]],[[],["errorkind",4]],[[]],[[["errorkind",4]]],[[["errorkind",4]],[["option",4],["ordering",4]]],[[],[["option",4],["i32",15]]],[[],[["usize",15],["result",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["ancestors",3]],[[],["osstr",3]],[[],["osstr",3]],[[],["osstr",3]],[[],["path",3]],[[],["path",3]],[[],["osstr",3]],[[],["path",3]],[[],["osstr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["pathbuf",3]],[[],["ancestors",3]],[[],["component",4]],[[],["prefixcomponent",3]],[[],["prefix",4]],[[]],[[]],[[]],[[]],[[]],[[["component",4]],["ordering",4]],[[],["ordering",4]],[[["prefix",4]],["ordering",4]],[[],["path",3]],[[["asref",8],["path",3]],["bool",15]],[[["component",4]],["bool",15]],[[["prefixcomponent",3]],["bool",15]],[[["prefix",4]],["bool",15]],[[],[["option",4],["osstr",3]]],[[],[["option",4],["osstr",3]]],[[],[["option",4],["osstr",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["osstring",3]],["pathbuf",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["path",3],["box",3]]],[[]],[[],["osstring",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["asref",8],["path",3]],["pathbuf",3]],[[],["prefix",4]],[[["component",4]],["bool",15]],[[["prefix",4]],["bool",15]],[[],["path",3]],[[],["pathbuf",3]],[[],["option",4]],[[],[["option",4],["path",3]]],[[["component",4]],[["option",4],["ordering",4]]],[[["prefixcomponent",3]],[["option",4],["ordering",4]]],[[["prefix",4]],[["option",4],["ordering",4]]],[[],["bool",15]],[[["asref",8],["path",3]]],[[["usize",15]]],[[["usize",15]]],[[["osstr",3],["asref",8]],["bool",15]],[[["osstr",3],["asref",8]]],[[]],[[["asref",8],["path",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["pathbuf",3]],[[],[["option",4],["str",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["pathbuf",3]],[[["osstr",3],["asref",8]],["pathbuf",3]],[[["osstr",3],["asref",8]],["pathbuf",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["nonzerou64",3]]],[[["nonzerou32",3]]],[[]],[[],["u64",15]],[[],["u32",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["openoptions",3]],[[["bool",15]]],[[["openoptions",3]],["openoptions",3]],[[["openoptions",3]]],[[["openoptions",3]],["openoptions",3]],[[["openoptions",3]]],[[],["usize",15]],[[["openoptions",3]],["openoptions",3]],[[["openoptions",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["openoptions",3]],[[],["metadata",3]],[[],["filetype",3]],[[],["permissions",3]],[[]],[[]],[[]],[[]],[[["openoptions",3]],["ordering",4]],[[["openoptions",3]],["bool",15]],[[["bool",15]]],[[["bool",15]]],[[]],[[],["openoptions",3]],[[["openoptions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[["permissions",3]],["bool",15]],[[["intoiterator",8]]],[[],["osstring",3]],[[],[["filetype",3],["result",6]]],[[],["filetype",3]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["openoptions",3],["option",4]]],[[["usize",15]],["openoptions",3]],[[["usize",15]],["openoptions",3]],[[["intoiterator",8]],["openoptions",3]],[[]],[[]],[[["openoptions",3]]],[[["openoptions",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],[["metadata",3],["result",6]]],[[["openoptions",3]],["bool",15]],[[["filetype",3]],["bool",15]],[[["permissions",3]],["bool",15]],[[]],[[],[["result",6],["option",4]]],[[],["openoptions",3]],[[["openoptions",3],["asref",8],["path",3]],[["result",6],["file",3]]],[[["openoptions",3]],[["option",4],["ordering",4]]],[[],["pathbuf",3]],[[],["permissions",3]],[[],[["usize",15],["result",6]]],[[["bool",15]]],[[],["bool",15]],[[["openoptions",3]]],[[["openoptions",3],["bool",15]]],[[["bool",15]]],[[["openoptions",3]],["openoptions",3]],[[["openoptions",3]]],[[]],[[]],[[]],[[]],[[["openoptions",3]]],[[["bool",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["usize",15],["result",6]]],[[["bool",15]]],null,null,[[]],[[]],[[],["systemtime",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["uuid",3]],[[],["uuidversion",4]],[[]],[[]],[[["uuidversion",4]],["ordering",4]],[[["uuid",3]],["bool",15]],[[["uuidversion",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i64",15]],["option",4]],[[["u32",15],["u16",15]],["uuid",3]],[[]],[[["u64",15]],["option",4]],[[]],[[]],[[["uuid",3]],["bool",15]],[[],["uuid",3]],[[["uuidversion",4]],[["option",4],["ordering",4]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4],["uuidversion",4]]]],"p":[[3,"OsString"],[3,"OsStr"],[3,"IndexedColor"],[4,"ConstBitmap"],[4,"Bitmap"],[4,"OwnedBitmap"],[4,"BoxedBitmap"],[4,"SomeColor"],[4,"BltMode"],[8,"Drawable"],[3,"BitmapFlags"],[3,"TrueColor"],[3,"ColorComponents"],[3,"Point"],[3,"Size"],[3,"Rect"],[3,"Coordinates"],[3,"EdgeInsets"],[3,"ConstBitmap8"],[3,"Bitmap8"],[3,"BoxedBitmap8"],[3,"ConstBitmap32"],[3,"Bitmap32"],[3,"BoxedBitmap32"],[8,"Blt"],[8,"BltConverter"],[3,"OperationalBitmap"],[3,"ImageLoader"],[3,"DeepColor30"],[8,"BasicDrawing"],[8,"RasterFontWriter"],[8,"GetPixel"],[8,"MutableRasterImage"],[8,"SetPixel"],[8,"RasterImage"],[3,"OpenOptions"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"Metadata"],[3,"FileType"],[3,"Permissions"],[4,"ErrorKind"],[4,"Repr"],[3,"Error"],[3,"Custom"],[8,"Write"],[8,"Read"],[4,"Component"],[4,"Prefix"],[3,"Path"],[3,"PrefixComponent"],[3,"PathBuf"],[3,"Ancestors"],[8,"Rng"],[8,"Prng"],[3,"XorShift64"],[3,"XorShift32"],[3,"Sb255"],[3,"StringBuffer"],[3,"OpenOptions"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"Metadata"],[3,"FileType"],[3,"Permissions"],[3,"SystemTime"],[3,"Uuid"],[4,"UuidVersion"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};